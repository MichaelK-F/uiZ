<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 10
//#objectversion 1.0
uiz_objinit()
posinframex=uiz_fill
posinframey=uiz_fill
spraddto=0;
image_speed=0;
sprite[0]=spr_uiz_designerlogo
//orientation=uiz_horizontal
color[0]=c_red
marginy=4//v//margin y//
marginx=4//v//margin x//
items=0
ratio=0.75//v//ratio//
onitem=-1
onitem_old=-1
//currenttab=0//v//begin tab//
backcolor=c_white//c//background color//
backalpha=1//v//background alpha//
laststepselected=-1
count=0
decount[0]=0
decount_counting=0;
graphtype=uiz_smoothstep//a//animation//
countspeed=0.15//v//animation time//
coloringfactor_value=62//v//coloring value factor//
coloringfactor_saturation=13//v//coloring saturation factor//
trianglesprite=spr_uiZ_functionbar_triangle//p//triangle sprite//
trainglecolor=c_black//c//triangle selector color//
trainglecolor_over=c_dkgray//c//triangle selector mouse over color//
trainglecolor_in=c_gray//c//triangle selector mouse click color//
lastsel=-1
isz=0;
selectioncolor=0;
selectioncolor_old=0;
fac=0;
uimg=0;
rcol=0;






item_texturescript=uiz_back_circlestitch//i//item texturescript//
item_texturescript_over=-1//i//texturescript over//
item_texturescript_in=-1//i//texturescript in//
item_texturescript_out=-1//i//texturescript out//

item_sprite_normal=spr_uiZ_border0//p//item sprite normal//

item_margin_normal=5//v//item margin normal//
item_sprite_texturemode=uiz_texturemode_fill//t//item texturemode normal
item_border_texturemode=-1//t//item texturemode border//

item_sprite_over=-1//p//item sprite over//

item_margin_over=-1//v//item margin over//

item_sprite_in=-1//p//item sprite in//
item_margin_in=-1//v//item margin in//

item_sprite_out=-1//p//item sprite out//
item_margin_out=-1//v//item margin out//

//do not change these
item_color_normal=c_white
item_color_over=-1
item_color_in=-1
item_color_out=-1
sprite_texturemode=0;
border_texturemode=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if live_call() return live_result;
if decount_counting&gt;0 or count&lt;1 then{
if count&lt;1 then{
count = min(1, count + uiz_sc(countspeed));
uiz_functionbar_updateitem(onitem);
}
if decount_counting&gt;0 then{
decount_counting = 0;
for(var i=0;i&lt;items;i++){
    ++decount_counting;
    if decount[i]&gt;0 then{
        decount[i] = max(0, decount[i] - uiz_sc(countspeed));
        uiz_functionbar_updateitem(i);
        if decount[i]&lt;=0 then{decount_counting--;}
    }
}
}
}else{
uiz_updater_unstep()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if live_call() return live_result;

mx=uiz_getmouse_x()-rx
my=uiz_getmouse_y()-ry

var pxs=(isz+marginx);
if (mx % pxs)&lt;marginx then{
    onitem=-1;
}else{
    onitem=floor(mx/pxs);
if onitem&gt;=items then{
    onitem=-1;
}
}


if onitem_old!=onitem then{
    //reset animation
    var upd=false;
    if onitem_old&gt;=0 and count&gt;0 then{
        upd=true;
        //if decount_counting&gt;0 then{upd=true}//if this is the first item in the list
        decount_counting++;
        decount[onitem_old] = count;
    }
    if onitem!=-1 or upd=true then{
    uiz_updater_step();}
    count = 0
    uiz_functionbar_updateitem(onitem_old);
    uiz_functionbar_updateitem(onitem);
    onitem_old=onitem;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check on mouse stuff
var i = onitem;
//if (i&gt;=0 and point_in_rectangle(uiz_getmouse_x(), uiz_getmouse_y(), sx + h, sy + marginy, sx + h + isz, sly - marginy)) then {
if (i&gt;=0 and i&lt;items) then{
    if kmouseover &gt; 0 then {
        uiz_set_cursor(cr_handpoint)
    }
    if mouse_check_button_released(mb_right) {
        if menu[i] != 0 then {
            script_execute(menu[i])
        }
    }
    //thisstepselected = i
    if is_string(menu[i]) = 1 or menu[i] &gt; 0 then {
        var addisz = isz / 9 + 5;
    } else {
        var addisz = 0
    }
    if uiz_getmouse_y() &gt; sly - marginy - addisz then {
        thisstepselected += 0.5
    } else {
        if mouse_check_button_released(mb_left) {
            if clicked[i] != 0 then {
                script_execute(clicked[i])
            }
        }
    }
    uimg = 1
    var fac;
        fac = (uiz_animation_getfunction(count, graphtype));
        selectioncolor = uiz_functionbar_createcolor(color[i],fac);
        

        
        if uiz_getmouse_y() &gt; sly - marginy - addisz and mouse_check_button(mb_left) {
            if menu[i] != 0 then {
                script_execute(menu[i])
            }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if live_call() return live_result;
if kmouseover=uiz_nomouse then{
    if onitem&gt;=0 then{
        if onitem&gt;=0 and count&gt;0 then{
            decount_counting++;
            decount[onitem] = count;
            uiz_updater_step();
        }
        onitem=-1;
        
    }
}else{
    if onitem_old=onitem then{
    //change mouse
    uiz_functionbar_updateitem(onitem);
    }else{
    onitem_old=onitem
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if uiz_cntn() then {
    isz = (height - marginy * 2) * ratio
    thisstepselected = -1
    draw_square(rx, ry, rlx, rly, backcolor, backalpha * alpha)
    for (var i = 0; i &lt; items; i++) {
            uiz_functionbar_drawitem(i)
        }
    laststepselected = thisstepselected
    draw_set_valign(fa_top)
    draw_set_halign(fa_left)
    uiz_containend()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
