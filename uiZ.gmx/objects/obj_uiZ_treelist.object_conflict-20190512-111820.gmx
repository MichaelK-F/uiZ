<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 8
//#objectversion 1.0
uiz_objinit()
//mainlist=ds_list_create()
//namelist=ds_list_create()
//spritelist=ds_list_create()
maxscrolllines=0
usexml=0
xmargin=3;
ymargin=1;
margin=1;
foldermargin=15;
boxcolor=c_black;
boxoncolor=c_gray;
boxincolor=c_ltgray;
boxemptyalpha=0.5;
boxsprite=spr_uiZ_plusminbox;
textcolor=c_black;
textoncolor=c_blue;
textselcolor=c_white;
backcolor=c_white;
backoncolor=c_black;
backselcolor=c_black;
backalpha=0;
backonalpha=0.5;
backselalpha=1;
selectxml=-1;
scrollbarwidth=16;
scrollbarwidthtype=px;
scrollbarsprite=spr_uiZ_scrollbar
scrollbarcolor=c_white
scrollbarbacktexmode=uiz_texturemode_fill
scroll=-1;
scrollat=0;
startscrollat=0;
showtags=true;


update=0;
updated=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var m=obj_uiz_xmlparser;
var l=m.filelistl[| usexml];
//var d=m.filelistd[| argument0];
//var v=m.filelistv[| argument0];
if ds_list_size(l)=0 then{selectxml=-1}

//handle scrollbar
scrolllines=uiz_xml_getextendedtags(usexml);
fitscrolllines=round(height/(string_height("{|")+ymargin*2+margin));
maxscrolllines=scrolllines-fitscrolllines+1;
//sdbm("frozenstep",global.mousefrozen)
if scrollat=0 then{
startscrollat=0;
}else{
startscrollat=clamp(uiz_xml_getextendedtags_number(usexml,scrollat),0,maxscrolllines);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sdbm("frozenbegdrawgui",global.mousefrozen)
updated=0
update=0
//uiz_xml_drawstuff(obj_uiz_xmlparser.filelistl[| usexml])
if uiz_cntn() then{
if uiz_xml_isempty(usexml)=0 then{
draw_set_halign(fa_left)
draw_set_valign(fa_top)
var m=obj_uiz_xmlparser;
var infolder=0;
var lv,lt;
var text="";
if instance_exists(m) and usexml&gt;-1 and 
ds_exists(m.filelistl,ds_type_list) and ds_exists(m.filelistd,ds_type_list) and ds_exists(m.filelistv,ds_type_list) and
ds_list_size(m.filelistl)&gt;=usexml and ds_list_size(m.filelistd)&gt;=usexml and ds_list_size(m.filelistv)&gt;=usexml and
ds_exists(m.filelistl[| usexml],ds_type_list) and ds_exists(m.filelistd[| usexml],ds_type_list) and ds_exists(m.filelistv[| usexml],ds_type_list) then{
var l=m.filelistl[| usexml];
var d=m.filelistd[| usexml];
var v=m.filelistv[| usexml];
//scroll trough list
var h=ry+ymargin;
var sz=ds_list_size(l)

for(var i=0;i&lt;startscrollat;i++){
if (uiz_positify(l[| i]) mod 8)&lt;=1 then{infolder+=foldermargin}
}
var enabled=true;
for(var i=startscrollat;i&lt;sz;i++){
//check type of tag
var orgi=i
var addinfolder=0;
//sdbm(l[| i])
lv=round(uiz_positify(l[| i])&gt;&gt;3);
lt=uiz_positify(l[| i]) mod 8;
var spr=0;
var img=0;
var dodraw=0;
if sign(l[| i])=-1 then{var ext=0}else{ext=1}
//var findwhat=0;
var findwhat=lv;
var drawbox=0;
var drawboxfull=true;

switch(lt){
case 0:
//H
addinfolder=1;
//infolder+=foldermargin;
drawbox=1;
enabled=true;
//check if box is empty
if (i+1&lt;sz) and (uiz_positify(l[| i+1]) mod 8)=7 then{drawboxfull=false;}
case 2:
if lt=2 then{enabled=showtags}
dodraw=1
//write out folder
var text=d[| lv];
//var th=string_height(text)
//draw_text(rx+xmargin+infolder,h,uiz_gettext_contained(text,width-xmargin*2))
//infolder+=foldermargin
//h+=th+ymargin*2+margin

break;
case 1:
//K
addinfolder=1;
enabled=true;
//infolder+=foldermargin;
drawbox=1;
case 3:
if lt=3 then{enabled=showtags}
dodraw=1;
var text=d[| lv]
while(i+2&lt;sz){
i++;
lv1=round(uiz_positify(l[| i])&gt;&gt;3);
lt1=uiz_positify(l[| i]) mod 8;
i++;
lv2=round(uiz_positify(l[| i])&gt;&gt;3);
lt2=uiz_positify(l[| i]) mod 8;
if lt1=4 and lt2=5 then{
//sdbm("v:",d[| lv1],v[| lv2])
switch(d[| lv1]){
case "enabled":
if string(v[| lv2])="true" then{enabled=true}else{enabled=false}
break;
case "name":
text=v[| lv2];
break;
case "sprite":
spr=string(v[| lv2]);
//sdbm("sprite!",spr)
if string_digits(spr)=spr then{spr=real(spr)}else{
spr=asset_get_index(spr)
}
if !sprite_exists(spr) then{spr=0}
break;
case "image":
img=v[| lv2];
break;
/*case "extended":
ext=v[| lv2];
findwhat=lv;
break;
*/
}
}else{
i-=2
break;
}
}
//check if box is empty
/*
lt=5
var sei=i+1;
while(lt=5 and sei&lt;sz){
if (uiz_positify(l[| sei]) mod 8)=7 then{drawboxfull=false;}
sei++;
}
*/
if (i+1&lt;sz) and (uiz_positify(l[| i+1]) mod 8)=7 then{drawboxfull=false;}
break;
case 7:
//E
//infolder-=foldermargin;
addinfolder=-1;
break;

}
if dodraw=1 and enabled=true then{
var th=string_height(string(text))
var futureh=h+th+ymargin*2+margin
if futureh&gt;rly then{break;}
var addto=0
var mouseonc=boxcolor
if drawbox=1 then{
addto=th+xmargin;
if global.mouseoverobject=id and global.mousefrozen=0 and point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),sx+xmargin*2+infolder,h-rx+sx,sx+xmargin*2+infolder+th,h+th-rx+sx) then{
uiz_set_cursor(cr_handpoint)
//if kmouseover&gt;0 then{
if mouse_check_button_released(mb_left) then{
l[| orgi]=-1-l[| orgi]
}
if mouse_check_button(mb_left) then{
mouseonc=boxincolor
}else{mouseonc=boxoncolor}
}
if drawboxfull=true then{
draw_sprite_ext(boxsprite,ext,rx+xmargin*2+infolder,h,th/sprite_get_width(boxsprite),th/sprite_get_height(boxsprite),0,mouseonc,alpha)
}else{
draw_sprite_ext(boxsprite,ext,rx+xmargin*2+infolder,h,th/sprite_get_width(boxsprite),th/sprite_get_height(boxsprite),0,mouseonc,alpha*boxemptyalpha)
}

}
var tusec,busec,busea;
if selectxml=orgi then{
tusec=textselcolor;
busec=backselcolor;
busea=backselalpha;
}else{

//sdbm("frozen0",global.mousefrozen)
if global.mouseoverobject=id and global.mousefrozen=0 and point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),sx+xmargin+infolder+addto,h-rx+sx,slx-scrollbarwidth,h+th-rx+sx) then{
//if global.doubleclick=1 then{updated=1}
if mouse_check_button(mb_left) then{if selectxml=orgi then{updated=1;}selectxml=orgi;update=1;}
tusec=textoncolor
busec=backoncolor
busea=backonalpha
}else{
tusec=textcolor
busec=backcolor
busea=backalpha
}}

draw_set_color(busec)
draw_set_alpha(busea*main_alpha)
//draw_rectangle(rx+xmargin+infolder+addto,h,rlx,h+th,0)
draw_square(rx+xmargin+infolder+addto,h,rlx,h+th,busec,busea*main_alpha)
draw_set_alpha(image_alpha)
draw_set_color(tusec)
if spr&gt;0 then{
draw_sprite_ext(spr,img,rx+xmargin*2+infolder+addto,h,th/sprite_get_width(spr),th/sprite_get_height(spr),0,c_white,1)

draw_text(rx+xmargin*2+infolder+th+addto,h,uiz_gettext_contained(string(text),width-xmargin*3-th-addto))
}else{

draw_text(rx+xmargin+infolder+addto,h,uiz_gettext_contained(string(text),width-xmargin*2-addto))
}
draw_set_color(c_white)
h=futureh
}
infolder+=addinfolder*foldermargin
addinfolder=0;
/*
if ext=0 then{
var newi=uiz_xml_gethandleend(usexml,i)
if newi&gt;-1 then{i=newi;}
}
*/

if ext=0 then{
//seek for end
var levelat=0;
while(i+1&lt;sz){
i++;
lt=uiz_positify(l[| i]) mod 8;
if lt=7 and levelat=0 and round(uiz_positify(l[| i])&gt;&gt;3)=findwhat then{
addinfolder=-1
//addinfolder--;
//addinfolder=max(addinfolder-1,-1)
break;
}
if lt&lt;=1 then{levelat++;}
if lt=7 then{levelat--;}
}
}

infolder+=addinfolder*foldermargin
addinfolder=0;
}

//var th=string_height()
//draw_text(rx+xmargin,h,uiz_gettext_contained(,width-xmargin*2))

}
//draw the scrollbar
if maxscrolllines&gt;0 then{
var sbw=uiz_getposx_self(scrollbarwidth,scrollbarwidthtype)
scroll=uiz_drawscrollbar_vertical(rlx-sbw,ry,rlx,rly,scrollbarsprite,scrollbarcolor,scrollbarbacktexmode,scroll,maxscrolllines,1,1)
scrollat=uiz_positify(scroll)
}
}
uiz_containend()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
