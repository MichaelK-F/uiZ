<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 21
//#objectversion 1.0
uiz_objinit()
//depth=-9999999999
uiz_fixgeneralpos(id)
margin=3//v//item margin//
textmargin=1//v//text margin in pixels//
uselist=-1
actionlist=-1
enabledlist=-1;
textcolor=c_black//c//text color//
textcolordisabled=c_ltgray//c//text color disabled//
font=-1//f//font//
selected=-1
selection=-1;
oldselection=-1;
updateselection=false;

selectioncol=0;

sel_y=0;
sel_ly=0;

sel_oy=0;
sel_oly=0;

updated=0
update=0;
destroylist=false//b//destroy list//
scrollspeed=3;
itemhasdoublemargins=false//b//items have added margins//
problems=0

scroll=0;
wait=false;

listener = noone;
listener_script = -1;

hasbackground=true;
texturescript=uiz_back_circlestitch//i//texturescript//
texturescript_over=-1//i//texturescript over//
texturescript_in=-1//i//texturescript in//
texturescript_out=-1//i//texturescript out//

sprite_normal=spr_uiZ_border1//p//sprite normal//
color_normal=c_white//c//color normal//
margin_normal=5//v//margin normal//
sprite_texturemode=uiz_texturemode_fill//t//texturemode normal
border_texturemode=-1//t//texturemode border//

sprite_over=spr_uiZ_border1_over//p//sprite over//
color_over=-1//c//color over//
margin_over=-1//v//margin over//

sprite_in=spr_uiZ_border1_in//p//sprite in//
color_in=-1//c//color in//
margin_in=-1//v//margin in//

sprite_out=spr_uiZ_border1_in//p//sprite out//
color_out=-1//c//color out//
margin_out=-1//v//margin out//


item_texturescript=uiz_back_circlestitch_horizontal//i//item texturescript//
item_texturescript_over=-1//i//texturescript over//
item_texturescript_in=-1//i//texturescript in//
item_texturescript_out=-1//i//texturescript out//

item_sprite_normal=spr_uiZ_border0//p//item sprite normal//
item_color_normal=c_white//c//item color normal//
item_margin_normal=5//v//item margin normal//
item_sprite_texturemode=uiz_texturemode_fill//t//item texturemode normal
item_border_texturemode=-1//t//item texturemode border//

item_sprite_over=-1//p//item sprite over//
item_color_over=c_ltgray//c//item color over//
item_margin_over=-1//v//item margin over//

item_sprite_in=-1//p//item sprite in//
item_color_in=c_gray//c//item color in//
item_margin_in=-1//v//item margin in//

item_sprite_out=-1//p//item sprite out//
item_color_out=15592941//c//item color out//
item_margin_out=-1//v//item margin out//


//custom default destroy functions
destroyxfunction=uiz_exponential_in
destroyyfunction=uiz_exponential_in
destroyafunction=uiz_exponential_in
destroyspeed=0.1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
if destroylist=true then{
uiz_destroydslist(uselist)
uiz_destroydslist(actionlist)
uiz_destroydslist(enabledlist)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_exists(uselist,ds_type_list) then{
var sz=ds_list_size(uselist)
if problems=1 and mouse_wheel_down() then{scroll=clamp(scroll+scrollspeed,0,sz-1)}
if scroll&gt;0 and mouse_wheel_up() then{scroll=clamp(scroll-scrollspeed,0,sz-1)}
}

if mouse_check_button(mb_left) and kmouseover=0 then{
    updated=1;
    selection=-1;
    uiz_destroyObject_animation_default(id);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var ubkmar = bkmar;

if uselist != -1 and ds_exists(uselist, ds_type_list) then {

    if font&gt;-1 then{draw_set_font(font)}
    var sz = ds_list_size(uselist)
    if ds_exists(enabledlist, ds_type_list) then {
        var esz = ds_list_size(enabledlist)
    }
    var h = 0;
    var th, txt;
    //set old selection
        oldselection = selection;
        sel_oy = sel_y;
        sel_oly = sel_ly;
    if wait=false and destroy &lt;= 0 and !point_in_rectangle(uiz_getmouse_x(), uiz_getmouse_y(), rx, iy, rlx, ily) and mouse_check_button(mb_left) then {
        updated = 1
        selection = -1;
    }else{
    problems = 0;
    for (var i = scroll; i &lt; sz; i++) {
    
        txt = string(uselist[| i])
        th = string_height(txt)
        if ds_exists(enabledlist, ds_type_list) and esz &gt; i and enabledlist[| i] = false then {
            var isaena = false
        } else {
            var isaena = true
        }
        if destroy &lt;= 0 and (uiz_getmouse_y() &gt; (iy + h)) and (uiz_getmouse_y() &lt; (iy + th + h)) then {
            selection = i;
            sel_y = iy+h;
            sel_ly = iy+th+h;
        }

        h += th + margin
        if iy + h &gt; global.screenpxheight or h &gt; height then {
            problems = 1;
            break;
        }
    }
    if mouse_check_button(mb_left) then {
        selectioncol = 2
    } else {
        selectioncol = 1
    }

    if scroll &gt; 0 and(iy + h) &lt; global.screenpxheight then {
        while ((scroll - 1) &gt; 0) {
            txt = string(uselist[| scroll - 1])
            th = string_height(txt)
            h += th + margin
            if (sy + h) &lt; global.screenpxheight then {
                scroll--
            } else {
                break;
            }
        }
    }
    }
    if oldselection != selection then {
        uiz_mousemenu_update_full();

    }

if selection&gt;0 then{uiz_set_cursor(cr_handpoint)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sdbm(id,object_get_name(object_index),object_index,obj_uiZ_controller.object_index,obj_uiZ_mousemenu.object_index)
//sdbm(global.mouseover,obj_uiZ_controller.id,obj_uiZ_mousemenu.id)
var km=min(kmouseover,2);
if selection&gt;=0 and selectioncol!=km then{
    selectioncol=km;
    uiz_mousemenu_update_new();
}

if kmouseover=uiz_mousereleased then{
    if wait=false then{
    //action
    if actionlist != -1 and ds_exists(actionlist, ds_type_list) then {
        script_execute(actionlist[| i])
    }
    selected = selection
    updated = 1
    if listener_script!=-1 and script_exists(listener_script) then{
    script_execute(listener_script,id,listener);
    }
    uiz_destroyObject_animation_default(id);
    }else{
        wait=false;
    }
    uiz_mousemenu_update_new();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw back
if uiz_cntn() then {
    //draw_square(rx,ry,rlx,rly,c_black,alpha)
    //draw items
    if font&gt;-1 then{draw_set_font(font)}
    draw_set_valign(fa_center);
    draw_set_halign(fa_left);
    bkcol=color_normal;
    bkmar=margin_normal;
    bkspr=sprite_normal;
    uiz_back();
    ubkmar = bkmar;
    if uselist != -1 and ds_exists(uselist, ds_type_list) then {
        var sz = ds_list_size(uselist)
        /*if ds_exists(enabledlist, ds_type_list) then {
            var esz = ds_list_size(enabledlist)
        }*/

        if updateselection = true and uiz_selfmarked = true then {
        //sdbm("updating mousemen",selection,oldselection)
            if selection != oldselection and oldselection!=-1 then {
                uiz_mousemenu_drawitem(oldselection, sel_oy, 0)
            }
            uiz_mousemenu_drawitem(selection, sel_y, selectioncol)
        } else {
            var h = ubkmar+ry;
             var th, txt;
            for (var i = scroll; i &lt; sz; i++) {
                var ucolor;
                if (i == selection) then{
                    ucolor = selectioncol;
                }else{
                    ucolor = 0;
                }
                h += margin + uiz_mousemenu_drawitem(i, h, ucolor)
            }
        }
    }
    draw_set_valign(fa_top);
    updateselection = false;
    uiz_containend()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
if destroylist=true then{
uiz_destroydslist(uselist)
uiz_destroydslist(actionlist)
uiz_destroydslist(enabledlist)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
if destroylist=true then{
uiz_destroydslist(uselist)
uiz_destroydslist(actionlist)
uiz_destroydslist(enabledlist)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
