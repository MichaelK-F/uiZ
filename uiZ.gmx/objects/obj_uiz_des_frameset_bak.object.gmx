<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_create()
/*
posinframex=uiz_fill
posinframey=uiz_fill
uiz_fixgeneralpos(id)
*/
//load the frameset
alarm[2]=1;
global.windowisfrom=0;
omgxml=-1;
dodraw=0
//alarm[3]=60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_destroy()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_xml_unloadfile(uxml)
uiz_destroyDsList(updatelist)
uiz_destroyDsList(updaterlorstrlist)
uiz_destroyDsList(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if omgxml&gt;-1 then{uiz_xml_unloadfile(omgxml)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///right after create event
uiz_des_framesetload()
dodraw=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load data from ini
var wv,o;

ini_open(ini)
if (global.loadingobjects=0 and ds_exists(itemlist,ds_type_list)) or (global.loadingobjects=1 and ds_exists(updatelist,ds_type_list)) then{
if global.loadingobjects=0 then{var l=itemlist}else{var l=updatelist}
var sz=ds_list_size(l)
for(i=0;i&lt;sz;i++){
if global.loadingobjects=0 then{o=l[| i]}else{o=uiz_des_object_loadingobjects_bussy(i);}
if o.rlorstr=1 then{wv=ini_read_string(string(object.uiobject),o.updatetype,o.defval)}else{
wv=ini_read_real(string(object.uiobject),o.updatetype,o.defval)}
uiz_des_setvalueof(o,wv)
//sdbm("setting up data:",o.updatetype)
switch(o.updatetype){
case "name": o.value=obj_uiz_des_name(object,wv) break;
case "parent": if wv&gt;-1 then{uiz_setParent(object,obj_uiz_designer.aflist[| wv])} 
//case "x": object.x=wv;x=wv; break;
//case "y": object.y=wv;y=wv; break;
case "x": object.posvalx=wv;object.x=wv;x=wv;posvalx=wv; break;
case "y": object.posvaly=wv;object.y=wv;y=wv;posvaly=wv; break;
case "posvalw": object.posvalw=wv;posvalw=wv; break;
case "posvalh": object.posvalh=wv;posvalh=wv; break;
case "posvalwtype": object.posvalwtype=wv;posvalwtype=wv;o.selected=wv; break;
case "posvalhtype": object.posvalhtype=wv;posvalhtype=wv;o.selected=wv; break;
case "posvalxtype": object.posinframex=wv;posinframex=wv;o.selected=wv; break;
case "posvalytype": object.posinframey=wv;posinframey=wv;o.selected=wv; break;
case "depth": object.adddepth=wv; break;
}
}
uiz_fixgeneralpos(object)
}

ini_close();
if overdestroy=1 then{instance_destroy()}
init=1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load data from ini BACKUP
/*
var wv,o;

ini_open(ini)
if ds_exists(itemlist,ds_type_list) then{
var sz=ds_list_size(itemlist)
for(i=0;i&lt;sz;i++){
o=itemlist[| i]
if o.rlorstr=1 then{wv=ini_read_string(string(object.uiobject),o.updatetype,o.defval)}else{
wv=ini_read_real(string(object.uiobject),o.updatetype,o.defval)}
o.value=wv
switch(o.updatetype){
case "name": o.value=obj_uiz_des_name(object,wv) break;
case "parent": if wv&gt;-1 then{uiz_setParent(object,obj_uiz_designer.aflist[| wv])} 
case "x": object.x=wv;x=wv; break;
case "y": object.y=wv;y=wv; break;
case "posvalw": object.posvalw=wv;posvalw=wv; break;
case "posvalh": object.posvalh=wv;posvalh=wv; break;
case "posvalwtype": object.posvalwtype=wv;posvalwtype=wv;o.selected=wv; break;
case "posvalhtype": object.posvalhtype=wv;posvalhtype=wv;o.selected=wv; break;
case "posvalxtype": object.posinframex=wv;posinframex=wv;o.selected=wv; break;
case "posvalytype": object.posinframey=wv;posinframey=wv;o.selected=wv; break;
case "depth": object.adddepth=wv; break;
}
}
uiz_fixgeneralpos(object)
}

ini_close();
if overdestroy=1 then{instance_destroy()}
init=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
uiz_des_object_alarm0_barebone()

depthbox=uiz_des_addtolist_val("depth:","depth",0)
framebox=uiz_des_addtolist_button("frames:","frames",0,"configure")


uiz_des_object_alarm0end()


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_des_object_beginstep()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.selobj=id then{
//sdbm("found something i guess?",id)
if uiz_des_checkitems()=1 then{
//sdbm("found update!")
//sdbm("opening ini",ini)
ini_open(ini)
var o=object;
var u=updateobject;
var v=u.value
var apply=1
if u.rlorstr=1 then{wv=ini_read_string(string(o.uiobject),updatetype,"")}else{wv=ini_read_real(string(o.uiobject),updatetype,0)}
switch(updatetype){
case "name": if u.updated=1 then{wv=obj_uiz_des_name(o,v)}else{apply=0;} break;
case "parent": uiz_setParent(object,global.newparentlist[|u.select]) wv=ds_list_find_index(obj_uiz_designer.aflist,global.newparentlist[|u.select]);  break;
//case "parent": sdbm(o,global.newparentlist[|u.select]) break;
case "x": o.posvalx=v; posvalx=v; wv=v; break;
case "y": o.posvaly=v; posvaly=v; wv=v; break;
case "posvalw": o.posvalw=v; posvalw=v; wv=v; break;
case "posvalh": o.posvalh=v; posvalh=v; wv=v; break;
case "posvalwtype": o.posvalwtype=u.select; posvalwtype=u.select; wv=u.select; break;
case "posvalhtype": o.posvalhtype=u.select; posvalhtype=u.select; wv=u.select; break;
case "posvalxtype": o.posinframex=real(u.value); posinframex=real(u.value); wv=u.select; break;
case "posvalytype": o.posinframey=real(u.value); posinframey=real(u.value); wv=u.select; break;
case "depth": o.adddepth=v; wv=v; break;
case "frames": if u.updated=1 then{
//spawn in window
uiz_des_framewindow();
} break;
}
uiz_fixgeneralpos(o)
uiz_fixgeneralpos(id)
uiz_fixChildren(o,1)
if apply=1 then{
ini_open(ini)
if u.rlorstr=1 then{ini_write_string(string(o.uiobject),updatetype,wv)}else{ini_write_real(string(o.uiobject),updatetype,wv)}
}
ini_close()
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///normal framewindow
if global.windowexists&gt;0 and instance_exists(global.windowexists) and global.haswindow=id then{
//if keyboard_check_pressed(vk_space){uiz_xml_savefile(uxml,"a.txt")}
if frbut_add.kmouseover=4 then{
//sdbm("frbut_add")
//add frame
if uiz_xml_isempty(uxml) then{
//var tree=uiz_xml_gettree(uxml,"")
//uiz_xml_writetag(uxml,tree,"horizontal","0","direction","horizontal")
var setname=string(irandom(99999))
while(setname="" or uiz_xml_somethinghasdata(uxml,"hasname",setname)=true){
setname+=string(irandom(99999))
}
uiz_xml_writetag_at(uxml,0,"horizontal","","divisions","1","size","1","sizetype",string(xtra),"name",setname+"-frame: 1 xtra","hasname",setname,"basename",setname)
//uiz_xml_writetag_at(uxml,0,"horizontal","")
//uiz_xml_unloadtree(tree)
uiz_des_framewindow_save()
}

else{
if xml.selectxml&gt;-1 and uiz_xml_istag_at(uxml,xml.selectxml) then{
uiz_xml_tagtostruct_at(uxml,xml.selectxml)
//var tree=uiz_xml_gettree(uxml,"")
//var istag=uiz_xml_gettaginfo_at(uxml,xml.selectxml,"directon","horizontal");

var istag=uiz_xml_gettag_name_at(uxml,xml.selectxml);

//if istag="" then{istag="horizontal"}

if istag="horizontal" then{
var usetag="vertical";
}else{
var usetag="horizontal";
}

var setname=string(irandom(99999))
while(setname="" or uiz_xml_somethinghasdata(uxml,"hasname",setname)=true){
setname+=string(irandom(99999))
}

uiz_xml_writetag_at(uxml,xml.selectxml,usetag,"","divisions","1","size","1","sizetype",string(xtra),"name",setname+"-frame: 1 xtra","hasname",setname,"basename",setname)
//uiz_xml_unloadtree(tree)
uiz_des_framewindow_save()

var fp=uiz_des_framewindow_findframefromxml(object,uxml,xml.selectxml)
//sdbm("fpadd:",fp,usetag,istag)
if istag="horizontal" then{
uiz_frameset_divide_horizontal(fp,1,xtra)
}else{
uiz_frameset_divide_vertical(fp,1,xtra)
}


}
}

//uiz_xml_savefile(uxml,"a.txt")
uiz_des_framewindow_makenames()
}

if frbut_switch.kmouseover=4 then{
uiz_xml_switch(uxml,"horizontal","vertical",0,1)
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()
//sdbm("swtich fset")
uiz_frameset_switch(object)
uiz_fixframesetpos(object)
}
if frbox_name.updated=1 and xml.selectxml&gt;-1 and uiz_xml_istag_at(uxml,xml.selectxml) then{
//sdbm("1")
var setname=string(frbox_name.value)
while(setname="" or uiz_xml_somethinghasdata(uxml,"hasname",setname)&gt;-1){
setname+=string(irandom(99999))
}
//sdbm("2")
uiz_xml_settaginfo_at(uxml,xml.selectxml,"hasname",string(frbox_name.value))
//sdbm("3")
uiz_des_framewindow_makenames()
//sdbm("4")
uiz_des_framewindow_save()
//sdbm("5")

}
if frbox_size.updated=1 and xml.selectxml&gt;-1 then{
uiz_xml_settaginfo_at(uxml,xml.selectxml,"size",string(frbox_size.value))
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()
var fp=uiz_des_framewindow_findframefromxml(object,uxml,xml.selectxml)
var num=uiz_xml_iswhattagin_at(uxml,xml.selectxml)-1
//sdbm("fpsize:",fp,num)
if fp&gt;0 and instance_exists(fp) and instance_exists(fp.parent) and fp.object_index!=obj_uiZ_frameset and num&gt;=0 then{
uiz_framedivisionsetvalue(fp.parent,num,real(frbox_size.value),real(frbox_type.value))
}
uiz_fixframesetpos(object)
}
if frbox_type.updated=1 and xml.selectxml&gt;-1 then{
uiz_xml_settaginfo_at(uxml,xml.selectxml,"sizetype",string(frbox_type.value))
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()
var fp=uiz_des_framewindow_findframefromxml(object,uxml,xml.selectxml)
var num=uiz_xml_iswhattagin_at(uxml,xml.selectxml)-1
//sdbm("fpsizetype:",fp,num)
if fp&gt;0 and instance_exists(fp) and instance_exists(fp.parent) and fp.object_index!=obj_uiZ_frameset and num&gt;=0 then{
uiz_framedivisionsetvalue(fp.parent,num,real(frbox_size.value),real(frbox_type.value))
}
uiz_fixframesetpos(object)

}

if frbut_min.kmouseover=4 and xml.selectxml&gt;-1 then{
//var tagn=uiz_xml_gettagsin_at(uxml,xml.selectxml);
uiz_xml_settaginfo_at(uxml,xml.selectxml,"divisions","1")
//sdbm("tagn",tagn)
//repeat(tagn){uiz_xml_removelasttagstruct_at(uxml,xml.selectxml)}
uiz_xml_removedown_at(uxml,xml.selectxml)
var str=uiz_xml_getdebugstringtotal(uxml)
//sdbm(str)
//sdbm(xml.selectxml)
//sdbm(string_copy(str,xml.selectxml,99999))
uiz_xml_structtotag_at(uxml,xml.selectxml)

var fp=uiz_des_framewindow_findframefromxml(object,uxml,xml.selectxml)
//sdbm("fpremove:",fp)
if fp&gt;0 and instance_exists(fp) then{
uiz_framesetundivide(fp)
}
uiz_fixframesetpos(object)
xml.selectxml=-1;
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()
}

if frbox_div.updated=1 and xml.selectxml&gt;-1 and !uiz_xml_istag_at(uxml,xml.selectxml) then{
//sdbm("settaginfor",xml.selectxml,string(frbox_div.value))
//sdbm("1")
uiz_xml_settaginfo_at(uxml,xml.selectxml,"divisions",string(frbox_div.value))
//get amount of tags
//sdbm("2")
var tagn=uiz_xml_gettagsin_at(uxml,xml.selectxml)
//sdbm(tagn)
//sdbm("3")
if tagn&gt;real(frbox_div.value) then{
repeat(tagn-real(frbox_div.value)){uiz_xml_removelasttagstruct_at(uxml,xml.selectxml)}
}
//sdbm("4")
var istag=uiz_xml_gettag_name_at(uxml,xml.selectxml);
//sdbm("4.2")


if tagn&lt;real(frbox_div.value) then{
//sdbm("4.1")
//sdbm("4.3")
if istag="horizontal" then{
var usetag="vertical";
}else{
var usetag="horizontal";
}
repeat(real(frbox_div.value)-tagn){
//sdbm("4.4")
var setname=string(irandom(99999))
while(setname="" or uiz_xml_somethinghasdata(uxml,"hasname",setname)=true){
setname+=string(irandom(99999))
}

uiz_xml_writetag_at_end(uxml,xml.selectxml,usetag,"","divisions","1","size","1","sizetype",string(xtra),"name",setname+"-frame: 1 xtra","hasname",setname,"basename",setname)}
}
//sdbm("5")
uiz_des_framewindow_makenames()
//sdbm("6")
uiz_des_framewindow_save()
//sdbm("7")
//uiz_xml_savefile(uxml,"a.txt")
//get the position inside of the frameset, from the xml
var fp=uiz_des_framewindow_findframefromxml(object,uxml,xml.selectxml)
//sdbm("fp:",fp,istag)
if fp&gt;0 and instance_exists(fp) then{
if fp.object_index=obj_uiZ_frame or (fp.object_index=obj_uiZ_frameset and fp.divisions&gt;0) then{
if usetag="horizontal" then{
var fpp=uiz_framedivisionhorizontal_part_beg(fp)
}else{var fpp=uiz_framedivisionvertical_part_beg(fp)}
for(var i=0;i&lt;frbox_div.value;i++){
uiz_framedivision_part_mid(fpp,fp,1,xtra)
}
if istag="horizontal" then{
uiz_framedivisionhorizontal_part_end(fpp,fp)
}else{uiz_framedivisionvertical_part_end(fpp,fp)}
}else{
uiz_framedivisionsetdivisions(fp,frbox_div.value,true);
}
}
}

if xml.update=1 or xml.updated=1 and xml.selectxml&gt;-1 then{
uiz_stringbox_setvalue(frbox_name,string(uiz_xml_gettaginfo_at(uxml,xml.selectxml,"hasname","")))
frbox_div.value=real(uiz_xml_gettaginfo_at(uxml,xml.selectxml,"divisions","1"))
frbox_size.value=real(uiz_xml_gettaginfo_at(uxml,xml.selectxml,"size","1"))
//frbox_type.value=real(uiz_xml_gettaginfo_at(uxml,xml.selectxml,"sizetype",string(xtra)))
if uiz_xml_gettag_name_at(uxml,xml.selectxml)="horizontal" then{
frbox_type.uselist=global.fyconstantlist
frbox_type.masklist=global.fyconstantnamelist
}else{
frbox_type.uselist=global.fxconstantlist
frbox_type.masklist=global.fxconstantnamelist
}
uiz_dropdown_setvalue(frbox_type,real(uiz_xml_gettaginfo_at(uxml,xml.selectxml,"sizetype",string(xtra))))
//sdbm("set",xml.selectxml,uiz_xml_gettaginfo_at(uxml,xml.selectxml,"divisons","1"))
//uiz_xml_savefile(uxml,"a.txt")
uiz_des_framewindow_save()
}


//uiz_xml_savefile(uxml,"a.txt")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///normal framewindow backup
/*
if global.windowexists&gt;0 and instance_exists(global.windowexists) and global.haswindow=id then{
//if keyboard_check_pressed(vk_space){uiz_xml_savefile(global.xml,"a.txt")}
if frbut_add.kmouseover=4 then{
//sdbm("frbut_add")
//add frame
if uiz_xml_isempty(global.xml) then{
//var tree=uiz_xml_gettree(global.xml,"")
//uiz_xml_writetag(global.xml,tree,"horizontal","0","direction","horizontal")
var setname=string(irandom(99999))
while(setname="" or uiz_xml_somethinghasdata(global.xml,"hasname",setname)=true){
setname+=string(irandom(99999))
}
uiz_xml_writetag_at(global.xml,0,"horizontal","","divisions","1","size","1","sizetype",string(xtra),"name",setname+"-frame: 1 xtra","hasname",setname,"basename",setname)
//uiz_xml_writetag_at(global.xml,0,"horizontal","")
//uiz_xml_unloadtree(tree)
uiz_des_framewindow_save()
}

else{
if xml.selectxml&gt;-1 and uiz_xml_istag_at(global.xml,xml.selectxml) then{
uiz_xml_tagtostruct_at(global.xml,xml.selectxml)
//var tree=uiz_xml_gettree(global.xml,"")
//var istag=uiz_xml_gettaginfo_at(global.xml,xml.selectxml,"directon","horizontal");

var istag=uiz_xml_gettag_name_at(global.xml,xml.selectxml);

//if istag="" then{istag="horizontal"}

if istag="horizontal" then{
var usetag="vertical";
}else{
var usetag="horizontal";
}

var setname=string(irandom(99999))
while(setname="" or uiz_xml_somethinghasdata(global.xml,"hasname",setname)=true){
setname+=string(irandom(99999))
}

uiz_xml_writetag_at(global.xml,xml.selectxml,usetag,"","divisions","1","size","1","sizetype",string(xtra),"name",setname+"-frame: 1 xtra","hasname",setname,"basename",setname)
//uiz_xml_unloadtree(tree)
uiz_des_framewindow_save()

var fp=uiz_des_framewindow_findframefromxml(object,global.xml,xml.selectxml)
//sdbm("fpadd:",fp,usetag,istag)
if istag="horizontal" then{
uiz_frameset_divide_horizontal(fp,1,xtra)
}else{
uiz_frameset_divide_vertical(fp,1,xtra)
}


}
}

//uiz_xml_savefile(global.xml,"a.txt")
uiz_des_framewindow_makenames()
}

if frbut_switch.kmouseover=4 then{
uiz_xml_switch(global.xml,"horizontal","vertical",0,1)
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()
//sdbm("swtich fset")
uiz_frameset_switch(object)
uiz_fixframesetpos(object)
}
if frbox_name.updated=1 and xml.selectxml&gt;-1 and uiz_xml_istag_at(global.xml,xml.selectxml) then{
var setname=string(frbox_name.value)
while(setname="" or uiz_xml_somethinghasdata(global.xml,"hasname",setname)&gt;-1){
setname+=string(irandom(99999))
}
uiz_xml_settaginfo_at(global.xml,xml.selectxml,"hasname",string(frbox_name.value))
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()

}
if frbox_size.updated=1 and xml.selectxml&gt;-1 then{
uiz_xml_settaginfo_at(global.xml,xml.selectxml,"size",string(frbox_size.value))
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()
var fp=uiz_des_framewindow_findframefromxml(object,global.xml,xml.selectxml)
var num=uiz_xml_iswhattagin_at(global.xml,xml.selectxml)-1
//sdbm("fpsize:",fp,num)
if fp&gt;0 and instance_exists(fp) and instance_exists(fp.parent) and fp.object_index!=obj_uiZ_frameset and num&gt;=0 then{
uiz_framedivisionsetvalue(fp.parent,num,real(frbox_size.value),real(frbox_type.value))
}
uiz_fixframesetpos(object)
}
if frbox_type.updated=1 and xml.selectxml&gt;-1 then{
uiz_xml_settaginfo_at(global.xml,xml.selectxml,"sizetype",string(frbox_type.value))
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()
var fp=uiz_des_framewindow_findframefromxml(object,global.xml,xml.selectxml)
var num=uiz_xml_iswhattagin_at(global.xml,xml.selectxml)-1
//sdbm("fpsizetype:",fp,num)
if fp&gt;0 and instance_exists(fp) and instance_exists(fp.parent) and fp.object_index!=obj_uiZ_frameset and num&gt;=0 then{
uiz_framedivisionsetvalue(fp.parent,num,real(frbox_size.value),real(frbox_type.value))
}
uiz_fixframesetpos(object)

}

if frbut_min.kmouseover=4 and xml.selectxml&gt;-1 then{
//var tagn=uiz_xml_gettagsin_at(global.xml,xml.selectxml);
uiz_xml_settaginfo_at(global.xml,xml.selectxml,"divisions","1")
//sdbm("tagn",tagn)
//repeat(tagn){uiz_xml_removelasttagstruct_at(global.xml,xml.selectxml)}
uiz_xml_removedown_at(global.xml,xml.selectxml)
var str=uiz_xml_getdebugstringtotal(global.xml)
//sdbm(str)
//sdbm(xml.selectxml)
//sdbm(string_copy(str,xml.selectxml,99999))
uiz_xml_structtotag_at(global.xml,xml.selectxml)

var fp=uiz_des_framewindow_findframefromxml(object,global.xml,xml.selectxml)
//sdbm("fpremove:",fp)
if fp&gt;0 and instance_exists(fp) then{
uiz_framesetundivide(fp)
}
uiz_fixframesetpos(object)
xml.selectxml=-1;
uiz_des_framewindow_makenames()
uiz_des_framewindow_save()
}

if frbox_div.updated=1 and xml.selectxml&gt;-1 and !uiz_xml_istag_at(global.xml,xml.selectxml) then{
//sdbm("settaginfor",xml.selectxml,string(frbox_div.value))
//sdbm("1")
uiz_xml_settaginfo_at(global.xml,xml.selectxml,"divisions",string(frbox_div.value))
//get amount of tags
//sdbm("2")
var tagn=uiz_xml_gettagsin_at(global.xml,xml.selectxml)
//sdbm(tagn)
//sdbm("3")
if tagn&gt;real(frbox_div.value) then{
repeat(tagn-real(frbox_div.value)){uiz_xml_removelasttagstruct_at(global.xml,xml.selectxml)}
}
//sdbm("4")
var istag=uiz_xml_gettag_name_at(global.xml,xml.selectxml);
//sdbm("4.2")


if tagn&lt;real(frbox_div.value) then{
//sdbm("4.1")
//sdbm("4.3")
if istag="horizontal" then{
var usetag="vertical";
}else{
var usetag="horizontal";
}
repeat(real(frbox_div.value)-tagn){
//sdbm("4.4")
var setname=string(irandom(99999))
while(setname="" or uiz_xml_somethinghasdata(global.xml,"hasname",setname)=true){
setname+=string(irandom(99999))
}

uiz_xml_writetag_at_end(global.xml,xml.selectxml,usetag,"","divisions","1","size","1","sizetype",string(xtra),"name",setname+"-frame: 1 xtra","hasname",setname,"basename",setname)}
}
//sdbm("5")
uiz_des_framewindow_makenames()
//sdbm("6")
uiz_des_framewindow_save()
//sdbm("7")
//uiz_xml_savefile(global.xml,"a.txt")
//get the position inside of the frameset, from the xml
var fp=uiz_des_framewindow_findframefromxml(object,global.xml,xml.selectxml)
//sdbm("fp:",fp,istag)
if fp&gt;0 and instance_exists(fp) then{
if fp.object_index=obj_uiZ_frame or (fp.object_index=obj_uiZ_frameset and fp.divisions&gt;0) then{
if usetag="horizontal" then{
var fpp=uiz_framedivisionhorizontal_part_beg(fp)
}else{var fpp=uiz_framedivisionvertical_part_beg(fp)}
for(var i=0;i&lt;frbox_div.value;i++){
uiz_framedivision_part_mid(fpp,fp,1,xtra)
}
if istag="horizontal" then{
uiz_framedivisionhorizontal_part_end(fpp,fp)
}else{uiz_framedivisionvertical_part_end(fpp,fp)}
}else{
uiz_framedivisionsetdivisions(fp,frbox_div.value);
}
}
}

if xml.update=1 or xml.updated=1 and xml.selectxml&gt;-1 then{
frbox_div.value=real(uiz_xml_gettaginfo_at(global.xml,xml.selectxml,"divisions","1"))
frbox_size.value=real(uiz_xml_gettaginfo_at(global.xml,xml.selectxml,"size","1"))
//frbox_type.value=real(uiz_xml_gettaginfo_at(global.xml,xml.selectxml,"sizetype",string(xtra)))
if uiz_xml_gettag_name_at(global.xml,xml.selectxml)="horizontal" then{
frbox_type.uselist=global.fyconstantlist
frbox_type.masklist=global.fyconstantnamelist
}else{
frbox_type.uselist=global.fxconstantlist
frbox_type.masklist=global.fxconstantnamelist
}
uiz_dropdown_setvalue(frbox_type,real(uiz_xml_gettaginfo_at(global.xml,xml.selectxml,"sizetype",string(xtra))))
//sdbm("set",xml.selectxml,uiz_xml_gettaginfo_at(global.xml,xml.selectxml,"divisons","1"))
//uiz_xml_savefile(global.xml,"a.txt")
uiz_des_framewindow_save()
}


//uiz_xml_savefile(global.xml,"a.txt")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.windowexists&gt;0 and instance_exists(global.windowexists) and instance_exists(global.windowisfrom) and global.haswindow=id+0.1 then{



if frbut_check.kmouseover=4 and xml.selectxml&gt;-1 then{
var setto=uiz_des_framewindow_findframefromxml(object,uxml,xml.selectxml)
//sdbm("setto!",setto,object_get_name(setto.object_index))
if instance_exists(setto) then{

uiz_setParent(global.windowisfrom.object,setto)
ini_open(global.windowisfrom.ini)
//sdbm("writing to",global.windowisfrom.object.uiobject,"parentinframe",uiz_xml_gettaginfo_at(uxml,xml.selectxml,"basename","-1"))
ini_write_string(string(global.windowisfrom.object.uiobject),"parentinframe",uiz_xml_gettaginfo_at(uxml,xml.selectxml,"basename","-1"))
ini_close();
uiz_fixgeneralpos(global.windowisfrom.object)
uiz_destroyobject_animation(global.windowexists,uiz_exponential_in,uiz_exponential_in,uiz_exponential_in,0.1)
global.windowisfrom=0;
global.haswindow=0;
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_xml_unloadfile(uxml)
uiz_destroyDsList(updatelist)
uiz_destroyDsList(updaterlorstrlist)
uiz_destroyDsList(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_xml_unloadfile(uxml)
uiz_destroyDsList(updatelist)
uiz_destroyDsList(updaterlorstrlist)
uiz_destroyDsList(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//uiz_des_object_draw()
/*
draw_set_color(c_black)
draw_rectangle(0,0,2000,50,0)
draw_set_color(c_white)
draw_text(0,0,uiz_xml_getdebugstringtotal(global.xml))
//*/
//draw stuff at frames
rx=(object.rx-obj_uiz_designer.af.rx)+parent.rx
ry=(object.ry-obj_uiz_designer.af.ry)+parent.ry
rlx=rx+object.width
rly=ry+object.height
//if uiz_cntn(){
if dodraw=1 and obj_uiz_designer.view&gt;0 then{
draw_set_color(c_black)
draw_rectangle(rx,ry,rlx,rly,1)
//follow the structure
if obj_uiz_designer.view=1 then{
uiz_des_framewindow_drawlines(object,obj_uiz_designer.af.height)
}else{
uiz_des_framewindow_drawlines(object,0)}
}
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
