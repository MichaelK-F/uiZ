<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 3
//#objectversion 1.0
//#exclude
uiz_objinit()

itemwidth=0.4//v//item width//
itemwidthtype=dp//z//item width type//
itemheight=0.4//v//item height//
itemheighttype=dp//z//item height type//

marginwidth=20//v//margin width//
marginwidthtype=px//z//margin width type//
marginheight=20//v//margin height//
marginheighttype=px//z//margin height type//

minmargin=2//v//minimal magin//
minmargintype=px//z//minimal margin type//

scrollway=uiz_vertical//b//scroll direction//

keepratio=true//b//keep ratio when scaling//
scaleup=false//b//scale items or margins//
sortway=uiz_horizontal//countway

enablescroll=true//b//enable scroll//
enablescrollbar=!global.systemsupportstouch//b//enable scroll bar//
scroll=true;

scrollbarsize=0.2//v//scrollbar size//
scrollbarsizetype=dp//z//scrollbar size type//

scrollbarsprite=spr_uiZ_scrollbar//p//sprite//
scrollbarcolor=c_white//c//color//
scrollbarbacktexturemode=uiz_texturemode_fill//t//texturemode//
uscroll=0;

items=50//v//number of items//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_beginstep()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if uiz_cntn() then{
//get margin values
var mw=uiz_getposx_self(marginwidth,marginwidthtype);
var mh=uiz_getposy_self(marginheight,marginheighttype);

if scrollway=uiz_vertical then{
if scroll=true then{
var scbsz=uiz_getposx_self(scrollbarsize,scrollbarsizetype);
width-=scbsz;
}
//get item width and height
var mm=uiz_getposx_self(minmargin,minmargintype)
var iw=min(uiz_getposx_self(itemwidth,itemwidthtype),max(0,width-mm))
var ih=uiz_getposy_self(itemheight,itemheighttype)
}else{
if scroll=true then{
var scbsz=uiz_getposy_self(scrollbarsize,scrollbarsizetype);
height-=scbsz;
}
//get item width and height
var mm=uiz_getposy_self(minmargin,minmargintype)
var iw=uiz_getposx_self(itemwidth,itemwidthtype)
var ih=min(uiz_getposy_self(itemheight,itemheighttype),max(0,height-mm))
}
//get number of items
var rawfitw=(width-mw)/(iw+mw)
var rawfith=(height-mh)/(ih+mh)
var fitw=round(rawfitw)
var fith=round(rawfith)
//get scale or items and margins
if scrollway=uiz_vertical then{
//get scale or items and margins
if scaleup=true then{
//sdbm("hi1",width,iw,mw,)
//keep margins proportional
var oiw=iw;
iw=(width-mw*(fitw+1))/fitw;
if keepratio=true then{
ih*=iw/oiw;
}
//sdbm("hi2",width,ih)
}else{
//keep item proportional
var ow=mw;
var oiw=iw;
var mw=(width-iw*fitw)/(fitw+1);
if mw&lt;mm then{
iw-=mw-mm;
if keepratio=true then{ih*=iw/oiw;}
mw=mm;
}
if keepratio=true then{mh*=mw/ow;}
}
fith=ceil(items/fitw)
//sdbm("hi3",mw,mh,fitw,fith,mm)
}else{
//get scale or items and margins
//if scrollway=vertical:
if scaleup=true then{
//keep margins proportional
var oih=ih;
ih=(height-mh*(fith+1))/fith;
if keepratio=true then{
iw*=ih/oih;
}
}else{
//keep item proportional
var oh=mh;
var oih=ih;
var mh=(height-ih*fith)/(fith+1);
if mh&lt;mm then{
ih-=mh-mm;
if keepratio=true then{iw*=ih/oih;}
mh=mm;
}
if keepratio=true then{mw*=mh/oh;}
}
fitw=ceil(items/fith)
}
var xc=0;
var yc=0;
//actually draw stuff:
//draw_square(rx,ry,rlx,rly,c_blue,0.5)
var ax=rx;
var ay=ry;
var rep=items
var cell=0;
if scroll=true then{
if scrollway=uiz_vertical then{
var rep=round(height/(ih+mh))*fitw;
var usval=uiz_positify(uscroll);
ay-=usval;
//get new yc;
yc=floor(usval/(ih+mh))
cell=yc*fitw;
if rep+cell&gt;items then{rep=items-cell}

}else{
var usval=uiz_positify(uscroll);
var rep=round(width/(iw+mw))*fith;
ax-=usval;
//get new yc;
xc=floor(usval/(iw+mw))
cell=xc*fith;
if rep+cell&gt;items then{rep=items-cell}
}
}
var startxc=xc;
var startyc=yc;
var endxc=xc+fitw;
//var endhc=yc+fith;
var endyc=yc+fith;


repeat(rep){
var iix=ax+mw+xc*(iw+mw)
var iiy=ay+mh+yc*(ih+mh)
var iilx=iix+iw;
var iily=iiy+ih;

//your code here
//iix: left side x coordinate
//iiy: top side y coordinate
//iilx: right side x coordinate
//iily: bottom side y coordinate
//iw: width
//ih: height
//xc: column number
//yc: row number
//cell: cell number


draw_square(iix,iiy,iilx,iily,cell*230,1)//test code



if sortway=uiz_horizontal then{
xc++
if xc&gt;=endxc then{xc=startxc; yc++;}
}else{
yc++
if yc&gt;=endyc then{yc=startyc; xc++;}
}
cell++;
}
if scroll=true then{
if scrollway=uiz_vertical then{
width+=scbsz;
uscroll=uiz_drawscrollbar_vertical_legacy(rlx-scbsz,ry,rlx,rly,scrollbarsprite,scrollbarcolor,scrollbarbacktexturemode,uscroll,(ih+mh)*fith+mh-height,true,ih)
}else{
height+=scbsz;
uscroll=uiz_drawscrollbar_horizontal_legacy(rx,rly-scbsz,rlx,rly,scrollbarsprite,scrollbarcolor,scrollbarbacktexturemode,uscroll,(iw+mw)*fitw+mw-width,true,iw)
}}
if enablescroll=true then{
if scrollway=uiz_vertical then{
if (ih+mh)*fith+mh+scbsz+scroll*5&gt;height then{scroll=true}else{scroll=false; uscroll=-1;}
}else{
if (iw+mw)*fitw+mw+scbsz+scroll*5&gt;width then{scroll=true}else{scroll=false; uscroll=-1;}
}
}else{scroll=false; uscroll=-1;}
uiz_containend()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
