<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 5
//#objectversion 1.0
uiz_objinit()
color=c_white//c//color//
sprite=spr_uiZ_buttons//p//sprite//
spraddto=0//v//add to sprite//
kmouseover=0;
text=""//s//text//
textcolor=c_black//c//textcolor//
textselectcolor=c_white//c//text selection color//
font=-1//f//font//
hasmouse=false;
keepratio=true//b//keep icon ratio//
selected=false;
keepinsidemode=1//v//keepinsidemode//

hasbackground=true;
texturescript=uiz_back_circlestitch//i//texturescript//
texturescript_over=-1//i//texturescript over//
texturescript_in=-1//i//texturescript in//
texturescript_out=-1//i//texturescript out//

sprite_normal=spr_uiZ_border1//p//sprite normal//
color_normal=c_white//c//color normal//
margin_normal=1//v//margin normal//
sprite_texturemode=uiz_texturemode_fill//t//texturemode normal
border_texturemode=-1//t//texturemode border//

sprite_over=spr_uiZ_border1_over//p//sprite over//
color_over=-1//c//color over//
margin_over=-1//v//margin over//

sprite_in=spr_uiZ_border1_in//p//sprite in//
color_in=-1//c//color in//
margin_in=-1//v//margin in//

sprite_out=spr_uiZ_border1_in//p//sprite out//
color_out=c_blue//c//color out//
margin_out=-1//v//margin out//

update=false;
updated=false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
///#define uiZ
//#sprite images
//#spritenum 5
width=10
height=10
lx=x+width
ly=y+height
color=c_white
children=-1
listpos=-1
uiz_initparent()
rx=parent.rx+x
ry=parent.ry+y
rlx=parent.rx+lx
rly=parent.ry+ly
sprite=spr_uiZ_buttons;
spraddto=0;
texturemode=uiz_texturemode_fill;
topbordermargin=0;
rightbordermargin=0;
bottombordermargin=0;
leftbordermargin=0;
posinframex=uiz_auto
posinframey=uiz_auto
posvalx=0
posvaly=0
addx=0
addy=0
containin=0
setpointx=uiz_auto
setpointy=uiz_auto
topframemargin=0;
rightframemargin=0;
bottomframemargin=0;
leftframemargin=0;
uiz_shader=1
containtowhosparent=id

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if hasmouse=true then{
update=true;
if mouse_check_button(mb_left) then{
//move button
posinframex=uiz_static
posinframey=uiz_static
x-=global.lastmousemovedx
y-=global.lastmousemovedy
switch(keepinsidemode){
case 1:
x=clamp(x,0-width/2,parent.iwidth-width/2)
y=clamp(y,0-height/2,parent.iheight-height/2)
break;
case 2:
x=clamp(x,max(0,parent.cntnrx-parent.ix)+width/2,min(parent.iwidth,parent.ilx-parent.cntnrlx)-width/2)
y=clamp(y,max(0,parent.cntnry-parent.iy)+height/2,min(parent.iheight,parent.ily-parent.cntnrly)-height/2)
break;
}
uiz_fixgeneralpos(id)
}else{hasmouse=false; global.mousefrozen=false}
}else{update=false;}
if kmouseover&gt;0 then{uiz_set_cursor(cr_handpoint)
if kmouseover&gt;1 and global.uiz_mouseswipeclick=true then{hasmouse=true global.mousefrozen=true;
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>updated=false
if kmouseover=3 then{selected=true if global.doubleclick=1 then{updated=true}}else{
if mouse_check_button_pressed(mb_left) then{selected=false}
}
uiz_updater_FixViews();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if uiz_cntn() then{
if font&gt;-1 then{draw_set_font(font)}
var ah=0;
var aw=0;
if text!="" then{
draw_set_valign(fa_bottom)
draw_set_halign(fa_middle)
var t=uiz_gettext_contained(text,width)
//sdbm("text is",t)
var ah=string_height(t);
var aw=string_width(t);

if selected=true then{
//draw_square(rx+width/2-aw/2,rly-ah,rx+width/2+aw/2,rly,textbackselectcolor,textbackselectalpha)
uiz_back_at(rx+width/2-aw/2,rly-ah,rx+width/2+aw/2,rly,3)
draw_set_color(textselectcolor)
}else{
uiz_back_at(rx+width/2-aw/2,rly-ah,rx+width/2+aw/2,rly)
//draw_square(rx+width/2-aw/2,rly-ah,rx+width/2+aw/2,rly,textbackcolor,textbackalpha)
draw_set_color(textcolor)
}

draw_text(rx+width/2,rly,t)


}
var dw,dh,dx,dy;
var sw=sprite_get_width(sprite);
var sh=sprite_get_height(sprite);
var uh=height-ah
if keepratio=true then{
ratio=sw/sh;
var f=min(width/sw,uh/sh);
//sdbm(f,width/sw,height/sh)
//dw=min(width,height*ratio);
//dh=dw/ratio;
dw=f;
dh=f;
dx=(width-sw*f)/2
dy=(uh-sh*f)/2
}else{
dw=width/sw
dh=uh/sh
dx=0
dy=0;
}
draw_sprite_ext(sprite,kmouseover+spraddto,rx+dx,ry+dy,dw,dh,0,color,image_alpha)
uiz_containend()
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
