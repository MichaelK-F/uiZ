<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window = uiz_window_create(.5,fc,.5,fc);
uiz_position(window,0,uiz_center,0,uiz_center);
//uiz_size(window,.5,fc,.5,fc);
uiz_fixgeneralpos(window);

curid=obj_uiZ_controller.id;
cury=0;
deepness=0;
textheight=15;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(window) then{
instance_destroy();
}

if keyboard_check(vk_control) and keyboard_check(vk_shift) and keyboard_check(ord("I")) then{
//regain focus on window
uiz_window_select(window);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var cl = curid.children;
var textheight = 3 + string_height('|')
if ds_exists(cl, ds_type_list) then{
deepness++;
for(var i=0;i&lt;ds_list_size(cl);i++){
    curid=cl[|i];
    
    
    
    if global.mouseoverwindow=window and uiz_getmouse_y()&gt;cury and uiz_getmouse_y()&lt;cury+textheight then{
        draw_set_alpha(0.6);
        draw_set_color(c_blue);
        draw_rectangle(curid.rx,curid.ry,curid.rlx,curid.iy,false)
        draw_rectangle(curid.rx,curid.ily,curid.rlx,curid.rly,false)
        draw_rectangle(curid.rx,curid.iy,curid.ix,curid.ily,false)
        draw_rectangle(curid.ilx,curid.iy,curid.rlx,curid.ily,false)        
        draw_set_color(c_green);
        draw_rectangle(curid.ix,curid.iy,curid.ilx,curid.ily,false)
        draw_set_color(c_yellow);
        draw_rectangle(curid.cntnx,curid.cntny,curid.cntnlx,curid.cntnly,false);
        
        draw_set_alpha(1);

        draw_set_color(c_blue);
        draw_rectangle(curid.rx,curid.ry,curid.rlx,curid.rly,true)
        draw_set_color(c_green);
        draw_rectangle(curid.ix,curid.iy,curid.ilx,curid.ily,true)
        draw_set_color(c_red);
        draw_rectangle(curid.rx-curid.leftmargin,curid.ry-curid.topmargin,curid.rlx+curid.rightmargin,curid.rly+curid.bottommargin,true)
    }else{
    draw_set_color(c_black);
    }
    draw_text(window.ix,cury,string_repeat(" - ",deepness)+object_get_name(curid.object_index)+" ("+string(curid)+") dep:"+string(curid.depth))
    cury+=textheight;
    if cury&lt;window.ily then{
        event_user(0);
    }
}
deepness--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>curid=obj_uiZ_controller.id;
cury=window.iy+textheight;
deepness=0;
draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_set_color(c_black);
draw_text(window.ix,window.iy,"mo: "+string(global.mouseover)+", mof: "+string(global.mouseoverframe)+", mosf: "+string(global.mouseoverscrollable))
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
