<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 3
//#objectversion 1.0
//#exclude
uiz_objinit()
//put init variables here
bigdots=12//v//nubmer of big dots//
smalldots=4//v//nubmer of small dots between big dots//
dotsprite=spr_uiZ_win31_analogclock_dots//p//sprite for dots//
pointersprite=spr_uiZ_win31_analogclock_pointer//p//sprite for the pointers//
pointersize=0.5//v//pointer size//
pointersizetype=fcm//z//pointer size type//
pointercolor=c_white//c//pointer color//
time=-1//v//time//
tm=0

ats=0;
atcs=0;
atm=0;
ath=0;
sec=date_get_second(date_current_datetime());

lastsecond=0;
seconds=true//b//seconds pointer//
minutes=true//b//minutes pointer//
hours=true//b//hours pointer//
secondanimation=uiz_exponential_in//a//seconds animation//
minuteanimation=uiz_zero//a//minute animation//
houranimation=uiz_straight//a//hour animation//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if time=-1 then{
tm=date_current_datetime();
}else{tm=time}
if os_browser == browser_not_a_browser or time!=-1 then{
    sec=date_get_second(tm);
    if lastsecond!=sec then{atcs=0; lastsecond=sec}
    atcs+=uiz_sc(1);//make the animation last one whole second
}else{//html time inaccuracy bug fix
    atcs+=uiz_sc(1);//make the animation last one whole second
    if atcs&gt;=1 then{
        atcs = 0;
        ++sec;
        if sec&gt;=60 then{
            sec = 0;
        }
    }
}
/*else{
    
}
*/



ats=uiz_animation_getfunction(atcs,secondanimation)*6
sdbm("updating, ",atcs,uiz_sc(1),ats,sec);
atm=uiz_animation_getfunction(sec/60,minuteanimation)*6

ath=uiz_animation_getfunction(date_get_minute(tm)/60,houranimation)*30
uiz_updater_FixViews();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if uiz_cntn() then{
//put draw code here
if sprite_exists(dotsprite) then{
//draw big dots in a circle
var hx=width/2;
var hy=height/2;
var radx=hx-sprite_get_width(dotsprite)/2;
var rady=hy-sprite_get_height(dotsprite)/2;
hx+=rx;
hy+=ry;
for(var i=0;i&lt;bigdots;i++){
var hk=(i/bigdots)*360;
draw_sprite(dotsprite,0,hx+dsin(hk)*radx,hy+dcos(hk)*rady)
//draw small dots
for(var e=1;e&lt;=smalldots;e++){
var gk=hk+(e/(smalldots+1))*((1/bigdots)*360)
draw_sprite(dotsprite,1,hx+dsin(gk)*radx,hy+dcos(gk)*rady)
}
}
}
//draw pointers
if sprite_exists(pointersprite) then{
var sz=uiz_getposx_self(0.5,fcm);
var hk=0;
var sc=sz/sprite_get_height(pointersprite);
if seconds=true then{draw_sprite_ext(pointersprite,0,hx,hy,sc,sc,-(sec)*6-ats,pointercolor,alpha)}
if minutes=true then{draw_sprite_ext(pointersprite,1,hx,hy,sc,sc,-date_get_minute(tm)*6-atm,pointercolor,alpha)}
if hours=true then{draw_sprite_ext(pointersprite,2,hx,hy,sc,sc,-date_get_hour(tm)*30-ath,pointercolor,alpha)}
}
uiz_containend()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
