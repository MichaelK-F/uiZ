<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 8
//#exclude
uiz_objinit()
selpos=-1
oldselpos=-1
last_kmouseover = 0;
selected=0
updated=0
update=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_colorbox_checkcolordump()
sz=0
bh=0
bb=0
bs=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar colorlist;
//kmouseover=uiz_mouse_isOver_object_leftCheck(id)

oldselpos=selpos;
updated=0;
selpos=-1;
if ds_exists(colorlist,ds_type_list) then{
sz=ds_list_size(colorlist)


if kmouseover&gt;0 then{
//check y
var mx=uiz_getmouse_x()-rx
var my=uiz_getmouse_y()-ry
var py=(my-bb) div (bh+bb);
var bh1=(bh+bb)*py+bb;
var bh2=bh1+bh;
selpos=py*3
var u=0
if point_in_rectangle(mx,my,width*(1/10),bh1,width*(3/10),bh2) then{u=1}else{
if point_in_rectangle(mx,my,width*(4/10),bh1,width*(6/10),bh2) then{u=1;selpos+=1}else{
if point_in_rectangle(mx,my,width*(7/10),bh1,width*(9/10),bh2) then{u=1;selpos+=2}else{selpos=-1;}}}
update=u;
selected=sz-1-selpos;
if kmouseover=3 then{updated=u;}

}
}

//sdbm("oldsel: ",oldselpos, "selpos: ",selpos);

if (oldselpos!=selpos or last_kmouseover != kmouseover) and selpos&gt;=0 and selpos&lt;sz then{
    bh1=ry+(bh+bb)*((selpos) div 3)+bb
    bh2=bh1+bh
    if bh1&lt;=rly then{        
        switch(selpos mod 3){
        case 0:
        uiz_updater_FixViews_area_selfmarked(rx+width*(1/10)-1,bh1-1,rx+width*(3/10)+1,bh2+1)
        break;
        case 1:
        uiz_updater_FixViews_area_selfmarked(rx+width*(4/10)-1,bh1-1,rx+width*(6/10)+1,bh2+1)
        break;
        case 2:
        uiz_updater_FixViews_area_selfmarked(rx+width*(7/10)-1,bh1-1,rx+width*(9/10)+1,bh2+1)
        break;
        }
    }
}

if oldselpos!=selpos and oldselpos&gt;=0 and oldselpos&lt;sz then{
    bh1=ry+(bh+bb)*((oldselpos) div 3)+bb
    bh2=bh1+bh
    if bh1&lt;=rly then{        
        switch(oldselpos mod 3){
        case 0:
        uiz_updater_FixViews_area_selfmarked(rx+width*(1/10)-1,bh1-1,rx+width*(3/10)+1,bh2+1)
        break;
        case 1:
        uiz_updater_FixViews_area_selfmarked(rx+width*(4/10)-1,bh1-1,rx+width*(6/10)+1,bh2+1)
        break;
        case 2:
        uiz_updater_FixViews_area_selfmarked(rx+width*(7/10)-1,bh1-1,rx+width*(9/10)+1,bh2+1)
        break;
        }
    }
}
last_kmouseover = kmouseover;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar colorlist;
if ds_exists(colorlist,ds_type_list) then{
if uiz_cntn() then{

var bh1,bh2;
var sz=ds_list_size(colorlist)
//draw the boxes in pairs of two
draw_set_color(c_black)
var e=-1;
for(var i=0;i&lt;bs;i++){
bh1=ry+(bh+bb)*i+bb
bh2=min(bh1+bh,rly);
if bh1&gt;rly then{break;}
e++;
if e&lt;sz then{
draw_square(rx+width*(1/10),bh1,rx+width*(3/10)+1,bh2+1,colorlist[| sz-1-e],1)
draw_rectangle(rx+width*(1/10)-1,bh1-1,rx+width*(3/10),bh2,1)
}else{break;}
e++;
if e&lt;sz then{
draw_square(rx+width*(4/10),bh1,rx+width*(6/10)+1,bh2+1,colorlist[| sz-1-e],1)
draw_rectangle(rx+width*(4/10)-1,bh1-1,rx+width*(6/10),bh2,1)
}else{break;}
e++;
if e&lt;sz then{
draw_square(rx+width*(7/10),bh1,rx+width*(9/10)+1,bh2+1,colorlist[| sz-1-e],1)
draw_rectangle(rx+width*(7/10)-1,bh1-1,rx+width*(9/10),bh2,1)
}else{break;}
}
//draw selpos
if selpos&gt;=0 and selpos&lt;sz then{
bh1=ry+(bh+bb)*((selpos) div 3)+bb
bh2=bh1+bh
if bh1&lt;=rly then{
var inh=color_get_hue(colorlist[| selected])
var ins=255;
if kmouseover&gt;uiz_mouseover then{
ins = 100;
}
draw_set_color(make_colour_hsv(128+inh,ins,ins))

switch(selpos mod 3){
case 0:
draw_rectangle(rx+width*(1/10)-1,bh1-1,rx+width*(3/10),bh2,1)
break;
case 1:
draw_rectangle(rx+width*(4/10)-1,bh1-1,rx+width*(6/10),bh2,1)
break;
case 2:
draw_rectangle(rx+width*(7/10)-1,bh1-1,rx+width*(9/10),bh2,1)
break;
}
}
}
uiz_containend()
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
