<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 3
//#objectversion 1.0
//#exclude
uiz_objinit()
draw=0
mark=false//b//mark
debugmark=false//b//debugmark
markcolor=irandom(255*255*255)
value=false;
iscover=0
fromx=0
fromy=0
tox=0
toy=0
minsizeinframeset=0
minsizeinframesetvaltype=px
maxsizeinframeset=0
maxsizeinframesetvaltype=px
framesetbar=0
//added because else it wouldn't work
inlistpos=0
snaptoparent=1
scrolly=false//b//drag-scroll y//
scrollyspeed=30//b//drag-scroll y//
scrollx=false;
snapm=false;
snapk=false;
snapx=0;
snapy=0;
menubutton=0;
//menucover=0;
blackframe=0;
blackframeanimation=uiz_circular_out
blackframealpha=0.4;
blackframeformouse=true;
forceanim=false
snaptime=.25;
value=false;
newvalue=false;
inanim=0;
menumousecoversize=0.5
menumousecoversizetype=dp
hasmouse=false;
mouseborderoutside=true;
mouseborderinside=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if ds_exists(children,ds_type_list) then{ds_list_destroy(children)}
//if surface_exists(containframe) then{surface_free(containframe)}
//if instance_exists(menumousecover) then{uiz_destroyobject(menumousecover)}
uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///scroll
//kmouseover=uiz_mouse_isonframe_leftcheck(id)
//if scrolly=true and kmouseover&gt;0 then{
//sdbm(kmouseover)
//sdbm("checking",global.mouseoverscrollframe,id)
var cy=false;
var cx=false;
var maxis=0;
var mayis=0;
if scrolly=true or scrollx=true or snapm=true then{
var maxis=-uiz_getmaxyscrollinframe(id);
var mayis=-uiz_getmaxxscrollinframe(id);
}
if global.mouseoverscrollable=id and snapm=false then{
if scrolly=true then{
if mouse_wheel_up() then{addy+=scrollyspeed; cy=true;}
if mouse_wheel_down() then{addy-=scrollyspeed cy=true;}
}else{

if scrollx=true then{
if mouse_wheel_up() then{addy+=scrollyspeed; cx=true;}
if mouse_wheel_down() then{addy-=scrollyspeed cx=true;}
}
}
if (scrolly=true or scrollx=true) and mouse_check_button_pressed(mb_middle) then{
snapm=true;
snapx=uiz_getmouse_x()
snapy=uiz_getmouse_y()
global.mousefrozen=true
}
if snapm=false and (scrolly=true or scrollx=true) and mouse_check_button(mb_left) and global.lastsecondmousemoved&gt;global.mousemovetoscroll then{
snapk=true;
snapx=uiz_getmouse_x()
snapy=uiz_getmouse_y()
global.mousefrozen=true
}


}
if snapk=true then{
if ((scrolly=false and scrollx=false) or !mouse_check_button(mb_left)) then{
snapk=false;
global.mousefrozen=0;
}
if scrolly=true then{
addy-=global.lastmousemovedy;
cy=true;
}
if scrollx=true then{
addx-=global.lastmousemovedx;
cx=true;
}
}
if snapm=true then{
if ((scrolly=false and scrollx=false) or !mouse_check_button(mb_middle)) then{
snapm=false;
global.mousefrozen=0;
}

window_set_cursor(cr_size_all)

if scrolly=true then{
var sped=snapy-uiz_getmouse_y();
addy+=sped;
//sdbm(maxis)
cy=true;
}

if scrollx=true then{
var sped=snapx-uiz_getmouse_x();
addx+=sped;
//sdbm(maxis)
cx=true;
}

}
if cx=true then{
addx=clamp(addx,mayis,0)}
if cy=true then{
addy=clamp(addy,maxis,0)
}
if cx=true or cy=true then{
uiz_fixchildren(id,true)}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///uiz_snapright
if posinframex=uiz_snapright then{
var q=true
if instance_exists(menubutton) then{

if menubutton.kmouseover=3 then{
forceanim=true
newvalue=!value
}
if menubutton.kmouseover&gt;=1 then{q=false}

}
if blackframeformouse=true and instance_exists(blackframe) then{
if value=true and blackframe.kmouseover=3 and kmouseover=0 then{forceanim=true; newvalue=false}
}else{
if value=true and mouse_check_button_pressed(mb_left) and kmouseover=0 and q then{forceanim=true; newvalue=false}
}
var mw=uiz_getposx_self(menumousecoversize,menumousecoversizetype)/2
if kmouseover=3 and point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),rx-mw*mouseborderoutside,ry,rx+mw*mouseborderinside,rly) then{
global.mousefrozen=true
hasmouse=true
}
if hasmouse=true then{
if !mouse_check_button(mb_left) then{
global.mousefrozen=false
hasmouse=false
}
if global.lastmousemovedx&lt;0 then{newvalue=false;}else{
if global.lastmousemovedx&gt;0 then{newvalue=true;}
}
if value=false then{
inanim=clamp(abs(global.uiz_mouseswipedx/width),0.01,1);
if uiz_getmouse_x()&lt;parent.rx then{inanim=1}
setpointx=inanim;
if inanim=1 then{value=true; newvalue=true; global.mousefrozen=false; hasmouse=false}
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,inanim,true,1)}
}else{
inanim=1-clamp(abs(global.uiz_mouseswipedx/width),0,1);
if uiz_getmouse_x()&lt;parent.rx then{inanim=1}
setpointx=inanim;
if inanim=0 then{value=false; newvalue=false; global.mousefrozen=false; hasmouse=false}
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,1-inanim,false,1)}
}
uiz_fixgeneralpos(id)
}else{

if (inanim&gt;0 and inanim&lt;1) or forceanim=true then{
if !(newvalue=true and forceanim=true) and ((newvalue=false and forceanim=true) or ((inanim&lt;0.96 and newvalue=false) or (inanim&lt;0.04 and newvalue=true))) then{
inanim=clamp(inanim-uiz_sc(snaptime),0,1)
if inanim=0 then{forceanim=false}
value=false;
//sdbm("2",inanim)
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,1-inanim,false,1)}
}else{
inanim=clamp(inanim+uiz_sc(snaptime),0,1)
if inanim=1 then{forceanim=false}
value=true;
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,inanim,true,1)}
}
setpointx=inanim;
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
uiz_fixgeneralpos(id)
}


}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///uiz_snaptop
if posinframey=uiz_snaptop and !(posinframex=uiz_snapright or posinframex=uiz_snapleft) then{
var q=true
if instance_exists(menubutton) then{

if menubutton.kmouseover=3 then{
forceanim=true
newvalue=!value
}
if menubutton.kmouseover&gt;=1 then{q=false}

}
if blackframeformouse=true and instance_exists(blackframe) then{
if value=true and blackframe.kmouseover=3 and kmouseover=0 then{forceanim=true; newvalue=false}
}else{
if value=true and mouse_check_button_pressed(mb_left) and kmouseover=0 and q then{forceanim=true; newvalue=false}
}
var mw=uiz_getposy_self(menumousecoversize,menumousecoversizetype)/2
if kmouseover=3 and point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),rx,rly-mw*mouseborderinside,rlx,rly+mw*mouseborderoutside) then{
global.mousefrozen=true
hasmouse=true
}
if hasmouse=true then{
if !mouse_check_button(mb_left) then{
global.mousefrozen=false
hasmouse=false
}
if global.lastmousemovedy&gt;0 then{newvalue=false;}else{
if global.lastmousemovedy&lt;0 then{newvalue=true;}
}
if value=false then{
inanim=clamp(abs(global.uiz_mouseswipedy/height),0.01,1);
if uiz_getmouse_y()&lt;parent.ry then{inanim=0}
setpointy=1-inanim;
if inanim=1 then{value=true; newvalue=true; global.mousefrozen=false; hasmouse=false}
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,inanim,true,1)}
}else{
inanim=1-clamp(abs(global.uiz_mouseswipedy/height),0,1);
if uiz_getmouse_y()&lt;parent.ry then{inanim=0}
setpointy=1-inanim;
if inanim=0 then{value=false; newvalue=false; global.mousefrozen=false; hasmouse=false}
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,1-inanim,false,1)}
}
uiz_fixgeneralpos(id)
}else{

if (inanim&gt;0 and inanim&lt;1) or forceanim=true then{
if !(newvalue=true and forceanim=true) and ((newvalue=false and forceanim=true) or ((inanim&lt;0.96 and newvalue=false) or (inanim&lt;0.04 and newvalue=true))) then{
inanim=clamp(inanim-uiz_sc(snaptime),0,1)
if inanim=0 then{forceanim=false}
value=false;
//sdbm("2",inanim)
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,1-inanim,false,1)}
}else{
inanim=clamp(inanim+uiz_sc(snaptime),0,1)
if inanim=1 then{forceanim=false}
value=true;
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,inanim,true,1)}
}
setpointy=1-inanim;
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
uiz_fixgeneralpos(id)
}


}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///uiz_snapbottom
if posinframey=uiz_snapbottom and !(posinframex=uiz_snapright or posinframex=uiz_snapleft) then{
var q=true
if instance_exists(menubutton) then{

if menubutton.kmouseover=3 then{
forceanim=true
newvalue=!value
}
if menubutton.kmouseover&gt;=1 then{q=false}

}
if blackframeformouse=true and instance_exists(blackframe) then{
if value=true and blackframe.kmouseover=3 and kmouseover=0 then{forceanim=true; newvalue=false}
}else{
if value=true and mouse_check_button_pressed(mb_left) and kmouseover=0 and q then{forceanim=true; newvalue=false}
}
var mw=uiz_getposy_self(menumousecoversize,menumousecoversizetype)/2
if kmouseover=3 and point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),rx,ry-mw*mouseborderoutside,rlx,ry+mw*mouseborderinside) then{
global.mousefrozen=true
hasmouse=true
}
if hasmouse=true then{
if !mouse_check_button(mb_left) then{
global.mousefrozen=false
hasmouse=false
}
if global.lastmousemovedy&lt;0 then{newvalue=false;}else{
if global.lastmousemovedy&gt;0 then{newvalue=true;}
}
if value=false then{
inanim=clamp(abs(global.uiz_mouseswipedy/height),0.01,1);
if uiz_getmouse_y()&lt;parent.ry then{inanim=1}
setpointy=inanim;
if inanim=1 then{value=true; newvalue=true; global.mousefrozen=false; hasmouse=false}
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,inanim,true,1)}
}else{
inanim=1-clamp(abs(global.uiz_mouseswipedy/height),0,1);
if uiz_getmouse_y()&lt;parent.ry then{inanim=1}
setpointy=inanim;
if inanim=0 then{value=false; newvalue=false; global.mousefrozen=false; hasmouse=false}
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,1-inanim,false,1)}
}
uiz_fixgeneralpos(id)
}else{

if (inanim&gt;0 and inanim&lt;1) or forceanim=true then{
if !(newvalue=true and forceanim=true) and ((newvalue=false and forceanim=true) or ((inanim&lt;0.96 and newvalue=false) or (inanim&lt;0.04 and newvalue=true))) then{
inanim=clamp(inanim-uiz_sc(snaptime),0,1)
if inanim=0 then{forceanim=false}
value=false;
//sdbm("2",inanim)
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,1-inanim,false,1)}
}else{
inanim=clamp(inanim+uiz_sc(snaptime),0,1)
if inanim=1 then{forceanim=false}
value=true;
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,inanim,true,1)}
}
setpointy=inanim;
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
uiz_fixgeneralpos(id)
}


}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///uiz_snapleft
if posinframex=uiz_snapleft then{
var q=true
if instance_exists(menubutton) then{

if menubutton.kmouseover=3 then{
forceanim=true
newvalue=!value
}
if menubutton.kmouseover&gt;=1 then{q=false}

}
if blackframeformouse=true and instance_exists(blackframe) then{
if value=true and blackframe.kmouseover=3 and kmouseover=0 then{forceanim=true; newvalue=false}
}else{
if value=true and mouse_check_button_pressed(mb_left) and kmouseover=0 and q then{forceanim=true; newvalue=false}
}
var mw=uiz_getposx_self(menumousecoversize,menumousecoversizetype)/2
if kmouseover=3 and point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),rlx-mw*mouseborderinside,ry,rlx+mw*mouseborderoutside,rly) then{
global.mousefrozen=true
hasmouse=true
}
if hasmouse=true then{
if !mouse_check_button(mb_left) then{
global.mousefrozen=false
hasmouse=false
}
if global.lastmousemovedx&gt;0 then{newvalue=false;}else{
if global.lastmousemovedx&lt;0 then{newvalue=true;}
}
if value=false then{
inanim=clamp(abs(global.uiz_mouseswipedx/width),0.01,1);
if uiz_getmouse_x()&lt;parent.rx then{inanim=0}
setpointx=1-inanim;
if inanim=1 then{value=true; newvalue=true; global.mousefrozen=false; hasmouse=false}
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,inanim,true,1)}
}else{
inanim=1-clamp(abs(global.uiz_mouseswipedx/width),0,1);
if uiz_getmouse_x()&lt;parent.rx then{inanim=0}
setpointx=1-inanim;
if inanim=0 then{value=false; newvalue=false; global.mousefrozen=false; hasmouse=false}
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
uiz_fixgeneralpos(blackframe)
}
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,1-inanim,false,1)}
}
uiz_fixgeneralpos(id)
}else{

if (inanim&gt;0 and inanim&lt;1) or forceanim=true then{
if !(newvalue=true and forceanim=true) and ((newvalue=false and forceanim=true) or ((inanim&lt;0.96 and newvalue=false) or (inanim&lt;0.04 and newvalue=true))) then{
inanim=clamp(inanim-uiz_sc(snaptime),0,1)
if inanim=0 then{forceanim=false}
value=false;
//sdbm("2",inanim)
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,1-inanim,false,1)}
}else{
inanim=clamp(inanim+uiz_sc(snaptime),0,1)
if inanim=1 then{forceanim=false}
value=true;
if instance_exists(menubutton) then{uiz_spriteanimationbutton_setvalue(menubutton,inanim,true,1)}
}
setpointx=1-inanim;
if instance_exists(blackframe) then{blackframe.image_alpha=uiz_animation_getfunction(inanim,blackframeanimation)*blackframealpha
if inanim&gt;0 then{blackframe.enabled=true}else{blackframe.enabled=false}
with(blackframe){uiz_updater_FixViews();}
uiz_fixgeneralpos(blackframe)

}
uiz_fixgeneralpos(id)
}


}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_compatibility_mouse_docheck_frame();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if mark=1 and uiz_hasparentinchain(id,100035) then{
if debugmark=1 then{
draw_set_alpha(0.5)
//draw_set_alpha(1)
if global.mouseover=id then{draw_set_color(c_white)}else{
draw_set_color(markcolor)}
draw_rectangle(rx,ry,rlx-1,rly-1,0)
draw_set_color(c_black)
draw_text(rx+10,ry+10,id)
draw_set_alpha(1)
}
uiz_drawshadow_roundrect()
if uiz_cntn() then{
if mark=true then{
draw_square(rx,ry,rlx,rly,markcolor,alpha)
}
uiz_containend()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if ds_exists(children,ds_type_list) then{ds_list_destroy(children)}
//if surface_exists(containframe) then{surface_free(containframe)}
uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if ds_exists(children,ds_type_list) then{ds_list_destroy(children)}
//if surface_exists(containframe) then{surface_free(containframe)}
uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if snapm=true then{draw_square(snapx-3,snapy-3,snapx+3,snapy+3,c_red,1)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
