<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 3
//#objectversion 1.0
//#exclude
uiz_objinit()
//put init variables here
tablist=-1;
spacinglist=ds_list_create();
textcolor=c_black//c//textcolor//
valign=fa_middle//v//valign//
halign=fa_left//v//halign//
font=-1//f//font//
selected=0//v//selected//
tabmargin=10//v//tabmargin//

purgeTopMargin=0;//v//purge top margin//
purgeLeftMargin=0;//v//purge left margin//
purgeRightMargin=0;//v//purge right margin//
purgeBottomMargin=4;//v//purge bottom margin//

oldselected=0;
ms=-1;
oldms=-1;
msX = 0;
msX2 = 0;
oldmsX = 0;
oldmsX2 = 0;
selmsX = 0;
selmsX2 = 0;

draw_old = false;
draw_new = false;
draw_sel = false;


hasbackground=true;
texturescript=uiz_back_circlestitch//i//texturescript//
texturescript_over=-1//i//texturescript over//
texturescript_in=-1//i//texturescript in//
texturescript_out=-1//i//texturescript out//

sprite_normal=spr_uiZ_bordertabs//p//sprite normal//
color_normal=c_white//c//color normal//
margin_normal=7//v//margin normal//
sprite_texturemode=uiz_texturemode_fill//t//texturemode normal
border_texturemode=-1//t//texturemode border//

sprite_over=spr_uiZ_bordertabs_over//p//sprite over//
color_over=-1//c//color over//
margin_over=-1//v//margin over//

sprite_in=spr_uiZ_bordertabs_in//p//sprite in//
color_in=-1//c//color in//
margin_in=-1//v//margin in//

sprite_out=spr_uiZ_bordertabs_out//p//sprite out//
color_out=-1//c//color out//
margin_out=-1//v//margin out//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
uiz_destroydslist(spacinglist);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var oldMouseSel=mouseSel;
//var oldMouseSelX=mouseSelX;
//var oldMouseSelX2=mouseSelX2;
var mouseSel = -1;
var mouseSelX = 0;
var mouseSelX2 = 0;
if ds_exists(tablist,ds_type_list) and ds_exists(spacinglist,ds_type_list) then{
var sz=ds_list_size(tablist)
var tot=0;
for(var i=0;i&lt;sz;i++){
var w=spacinglist[| i];
if uiz_getmouse_x()&gt;sx+tot and uiz_getmouse_x()&lt;sx+tot+w then{
mouseSel=i;
mouseSelX=sx+tot;
mouseSelX2=sx+tot+w;
break;
}
tot+=w;
}
}

if mouseSel!=ms then{

oldms = ms;
oldmsX = msX;
oldmsX2 = msX2;
ms = mouseSel;
msX = mouseSelX;
msX2 = mouseSelX2;


if selected!=ms &amp;&amp; ms!=-1 then{
//sdbm("new",msX,ry,msX2,rly)
uiz_updater_FixViews_area_selfmarked(msX,ry,msX2,rly);
draw_new=true;
}
if selected!=oldms &amp;&amp; oldms!=-1 then{
uiz_updater_FixViews_area_selfmarked(oldmsX,ry,oldmsX2,rly);
draw_old=true;
}


}

/*
if (kmouseover=uiz_mousepressed || kmouseover=0) &amp;&amp; mouseSel!=-1 &amp;&amp; draw_new=false then{
uiz_updater_FixViews_area_selfmarked(msX,ry,msX2,rly);
draw_new=true;
}
*/

//if kmouseover=0 then{}

if kmouseover=4 &amp;&amp; selected!=mouseSel &amp;&amp; mouseSel!=-1 then{//click on tab
oldselected=selected;
selected=mouseSel;
uiz_updater_FixViews_area_selfmarked(selmsX,ry,selmsX2,rly);
draw_sel=true;
if draw_new=false then{
uiz_updater_FixViews_area_selfmarked(msX,ry,msX2,rly);
draw_new=true;
}



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (kmouseover=uiz_mousepressed || kmouseover=0) &amp;&amp; ms!=-1 &amp;&amp; draw_new=false then{
uiz_updater_FixViews_area_selfmarked(msX,ry,msX2,rly);
draw_new=true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if uiz_cntn() then{
//put draw code here
if ds_exists(tablist,ds_type_list) and ds_exists(spacinglist,ds_type_list) then{
if font!=-1 then{draw_set_font(font)}
draw_set_valign(valign)
draw_set_halign(halign)
if uiz_selfmarked=true then{
    if ms!=-1 &amp;&amp; draw_new=true then{
    var sel;
    if draw_sel || selected=ms{
    sel=3;
    }else{
    sel=kmouseover//1+mouse_check_button(mb_left);
    }
    uiz_tabs_drawtab(msX,msX2-msX,sel,ms);
    draw_new=false;
    }
    if oldms!=-1 &amp;&amp; draw_old=true then{
    uiz_tabs_drawtab(oldmsX,oldmsX2-oldmsX,0,oldms);
    draw_old=false;
    }
    if selected!=-1 &amp;&amp; draw_sel=true then{
    uiz_tabs_drawtab(selmsX,selmsX2-selmsX,0,oldselected);
    draw_sel=false;
    selmsX=msX;
    selmsX2=msX2;
    }
    
    
    
}else{
    var sz=ds_list_size(tablist)
    var tot=0;
    for(var i=0;i&lt;sz;i++){
    var w=spacinglist[| i]
    //draw_square(rx+tot,ry,rx+tot+w,rly,color,alpha)
    var sel=0;
    if i=selected then{sel=3}
    uiz_tabs_drawtab(rx+tot,w,sel,i);
    
    tot+=w;
    }
}
draw_set_valign(fa_top);
draw_set_halign(fa_left);
}
uiz_containend()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
uiz_destroydslist(spacinglist);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
uiz_destroydslist(spacinglist);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
