<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 3
//#objectversion 1.0
uiz_objinit()
draw=0
mark=false//b//mark
debugmark=false//b//debugmark
//mark=true
//deugmark=true
markcolor=irandom(255*255*255)
iscover=0
fromx=0
fromy=0
tox=0
toy=0
minsizeinframeset=0
minsizeinframesetvaltype=px
maxsizeinframeset=0
maxsizeinframesetvaltype=px
framesetbar=0//added because else it wouldn't work
inlistpos=0
snaptoparent=1
scrolly=false//b//scroll y//
scrollyspeed=30//v//scroll y speed//
scrollx=false//b//scroll x//
scrollxspeed=30//v//scroll x speed//
snapm=false;
snapk=false;
snapx=0;
snapy=0;
scrollbarsprite=spr_uiZ_scrollbar//p//sprite//
scrollbarcolor=c_white//c//color//
scrollbarbacktexturemode=uiz_texturemode_fill//t//texturemode//
scrollbarsize=0.2//v//scrollbar size//
scrollbarsizetype=dp//v//scrollbar size type//
scrollbary=!global.systemsupportstouch//b//auto vertical scrollbar//
scrollbarx=!global.systemsupportstouch//b//auto horizontal scrollbar//
autoupdatescrolly=false//b//auto update vertical scrollbar//
autoupdatescrollx=false//b//auto update horizontal scrollbar//
scrollbarAnimation=uiz_smoothstep//a//scrollbar animation//
scrollbarAnimationTime=0.3//v//scrollbar animation time//
updatescrolly=false;
updatescrollx=false;
uscrolly=uiz_drawscrollbar_init();
uscrollx=uiz_drawscrollbar_init();
mscrollbary=0;
mscrollbarx=0;
scrollbarcorner_x=0;
scrollbarcorner_y=0;
scrollupdateobjs=ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if ds_exists(children,ds_type_list) then{ds_list_destroy(children)}
//if surface_exists(containframe) then{surface_free(containframe)}
ds_list_destroy(scrollupdateobjs);
uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse hover
var cy = false;
var cx = false;
var c=false;


if scrolly = true or scrollx = true or snapm = true then {

    c=uiz_frame_stepScrollbars();

    /***************************************************
      middle mouse scroll and drag
     ***************************************************/
     if uiz_drawscrollbar_getselected(uscrollx)=false and uiz_drawscrollbar_getselected(uscrolly)=false then{
    if global.mouseoverscrollable = id and snapm = false then {
        if (scrolly = true or scrollx = true) and mouse_check_button_pressed(mb_middle) then {
            snapm = true;
            snapx = uiz_getmouse_x()
            snapy = uiz_getmouse_y()
            uiz_snapper_enable(snapx,snapy);
            global.mousefrozen = true
        }
        if global.mousefrozen = false and snapm = false and uscrolly &lt; 0 and uscrollx &lt; 0 and(scrolly = true or scrollx = true) and mouse_check_button(mb_left) and global.lastsecondmousemoved &gt; global.mousemovetoscroll then {
            snapk = true;
            snapx = uiz_getmouse_x()
            snapy = uiz_getmouse_y()
            global.mousefrozen = true
        }
    }


    if snapk = true then {
        if (scrolly = false and scrollx = false) or!mouse_check_button(mb_left) or uscrolly &gt;= 0 then {
            snapk = false;
            global.mousefrozen = 0;
        }
        if scrolly = true then {
            addy -= global.lastmousemovedy;
            //sdbm("addy3",addy)
            cy = true;
        }
        if scrollx = true then {
            addx -= global.lastmousemovedx;
            cx = true;
        }
    }


    if snapm = true then {
        if ((scrolly = false and scrollx = false) or !mouse_check_button(mb_middle)) then {
            snapm = false;
            uiz_set_cursor(cr_default)
            uiz_snapper_disable();
            global.mousefrozen = 0;
        }else{

        uiz_set_cursor(cr_size_all)
        
        if scrolly = true then {
            var sped = snapy - uiz_getmouse_y();
            addy += sped;
            cy = true;
        }

        if scrollx = true then {
            var sped = snapx - uiz_getmouse_x();
            addx += sped;
            cx = true;
        }
}
    }
    }

    
    if cx = true or cy = true or c=true then {
    
    if cx = true then {
        addx = clamp(addx, mscrollbarx, 0)
        uiz_drawscrollbar_setvalue(uscrollx,-addx);
        uiz_drawscrollbar_update(uscrollx,rx,ily,rlx-scrollbarcorner_x,rly,uiz_horizontal)
    }
    
    if cy = true then {
        addy = clamp(addy, mscrollbary, 0)
        uiz_drawscrollbar_setvalue(uscrolly,-addy);
        uiz_drawscrollbar_update(uscrolly,ilx,ry,rlx,rly-scrollbarcorner_y,uiz_vertical);
    }
    
        uiz_frame_tellListeners();
        uiz_fixchildren(id, true)
        uiz_updater_FixViews();
        
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_frame_fixscrolling(true,true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///auto updater of scrollbars
/***************************************************
  Auto updater
 ***************************************************/
if autoupdatescrollx or autoupdatescrolly then{
    if autoupdatescrollx then{
        updatescrollx=true;
    }
    
    
    if autoupdatescrolly then {
        updatescrolly=true;
    }
    c = uiz_frame_fixscrolling(true,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_compatibility_mouse_docheck_frame();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if debugmark=1 then{
draw_set_alpha(0.5)
//draw_set_alpha(1)
if global.mouseover=id then{draw_set_color(c_white)}else{
draw_set_color(markcolor)}
draw_rectangle(rx,ry,rlx-1,rly-1,0)
//sdbm("eec")
draw_set_color(c_black)
draw_text(rx+10,ry+10,id)
draw_set_alpha(1)
}
if uiz_cntn() then{
if mark=true then{
draw_square(rx,ry,rlx,rly,markcolor,alpha)
}

if scrollx=true and scrollbarx=true and mscrollbarx&lt;0 then{
uiz_drawscrollbar_horizontal_draw(rx,ily,rlx-scrollbarcorner_x,rly,scrollbarsprite,scrollbarcolor,scrollbarbacktexturemode,uscrollx,-mscrollbarx)
}
if scrolly=true and scrollbary=true and mscrollbary&lt;0 then{
uiz_drawscrollbar_vertical_draw(ilx,ry,rlx,rly-scrollbarcorner_y,scrollbarsprite,scrollbarcolor,scrollbarbacktexturemode,uscrolly,-mscrollbary)
}
uiz_containend()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if ds_exists(children,ds_type_list) then{ds_list_destroy(children)}
//if surface_exists(containframe) then{surface_free(containframe)}
uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if ds_exists(children,ds_type_list) then{ds_list_destroy(children)}
//if surface_exists(containframe) then{surface_free(containframe)}
uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
