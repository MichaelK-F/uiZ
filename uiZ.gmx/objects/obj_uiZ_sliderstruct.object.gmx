<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 3
//#objectversion 1.0
//#exclude
uiz_objinit()
//put init variables here
//framelist=ds_list_create();
frames=0//v//frames//
frame=0;
queuedframe=-1;
moveback=1;
dir=0;
linearvalue=0;
animationtime=0.5//v//animation time//
animation=uiz_smoothstep//a//animation//
update=true;
horizontal=true//b//horizontal(true) or vertical(false)//
mouseslide=true//b//allow mouse sliding//
slideonwholeframe=false//b//slide on whole frame//
slidesize=0.3//v//slidesize//
slidesizetype=dp//z//slidesize type//
slidedist=1//v//minimum slide distance//
slidedisttype=dp//z//minimum slide distance type//
newframe=uiz_c(obj_uiZ_frame)
uiz_setparent(newframe,id)
newframe.posinframex=uiz_snapleft;
newframe.posinframey=uiz_snaptop;
newframe.posvalwtype=fc;
newframe.posvalhtype=fc;
newframe.posvalw=1;
newframe.posvalh=1;
newframe.setpointx=uiz_left;
newframe.setpointy=uiz_top;
uiz_fixframepos(newframe)
oldframe=newframe;
oldhasmouseframe=0;
hasmouse=false;
tabslider=0;
oldclickframe=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if keyboard_check_pressed(vk_space) then{uiz_sliderstruct_setframe(id,frame-1)}
if newframe != oldframe and dir != 0 and hasmouse = false then {
    var fa, fb, f;
    linearvalue = clamp(linearvalue + uiz_sc(animationtime) * moveback, 0, 1)
    if dir = -1 then {
        fa = oldframe
        fb = newframe
        f = uiz_animation_getfunction(linearvalue, animation);
    } else {
        fb = oldframe
        fa = newframe
        //fa = oldframe
        //fb = newframe
        //f = 1 - uiz_animation_getfunction(linearvalue, animation);
        //f = uiz_animation_getfunction(1-linearvalue, animation);
        f = 1 - uiz_animation_getfunction(linearvalue, animation);
        
    }
    //sdbm(linearvalue,f)
    if horizontal = true then {
        fa.posinframex = uiz_snapleft;
        fa.posinframey = uiz_snaptop;
        fb.posinframex = uiz_snapright;
        fb.posinframey = uiz_snaptop;
        fa.setpointx = f
        fb.setpointx = f
    } else {
        fa.posinframex = uiz_snapleft;
        fa.posinframey = uiz_snaptop;
        fb.posinframex = uiz_snapleft;
        fb.posinframey = uiz_snapbottom;
        fa.setpointy = f
        fb.setpointy = f
    }
    uiz_fixgeneralpos(fa)
    uiz_fixgeneralpos(fb)
    uiz_fixchildren(fa, true)
    uiz_fixchildren(fb, true)
    if linearvalue = 1 then {
        uiz_destroyobject(oldframe);
        oldframe = newframe;
        dir = 0;
        moveback = 1;
        if queuedframe!=-1 then{
        //sdbm("setting from queuedframe");
          uiz_sliderstruct_setframe(id,queuedframe);  
        queuedframe=-1;
        }
    }
    if linearvalue = 0 and moveback = -1 then {
        uiz_destroyobject(newframe);
        newframe = oldframe;
        dir = 0;
        moveback = 1;
        if queuedframe!=-1 then{
        //sdbm("setting from queuedframe 2",queuedframe);
          uiz_sliderstruct_setframe(id,queuedframe); 
                   
        queuedframe=-1;
        }
    }
} else {
    //handle mouse
    if horizontal = true then {
        var me = uiz_getposx_self(slidesize, slidesizetype)
    } else {
        var me = uiz_getposy_self(slidesize, slidesizetype)
    }
    if hasmouse = false and global.mousefrozen = false and mouseslide = true and mouse_check_button(mb_left) and point_in_rectangle(uiz_getmouse_x(), uiz_getmouse_y(), max(rx, cntnx), max(ry, cntny), min(rlx, cntnlx), min(rly, cntnly))
    and(slideonwholeframe = true or(horizontal = true and(uiz_getmouse_x() &lt; rx + me or uiz_getmouse_x() &gt; rlx - me)) or(horizontal = false and(uiz_getmouse_y() &lt; ry + me or uiz_getmouse_y() &gt; rly - me)))
    then {
        //slide frame
        oldclickframe = frame;
        hasmouse = true
        global.mousefrozen = true;
        global.mouseoverobject = id;
        global.mouseoverframe = id;
        //make sure oldframe doesn't exists anymore
        if instance_exists(oldframe) &amp;&amp; oldframe!=newframe then{
            uiz_destroyobject(oldframe);
        }
        
        oldframe = newframe;
        oldhasmouseframe = frame;
        //create newframe
        //sdbm("create new frame 1")
        newframe = uiz_c(obj_uiZ_frame)
        uiz_setparent(newframe, id)
        newframe.posinframex = uiz_snapleft;
        newframe.posinframey = uiz_snaptop;
        newframe.posvalwtype = fc;
        newframe.posvalhtype = fc;
        newframe.posvalw = 1;
        newframe.posvalh = 1;


        uiz_fixframepos(newframe)
    }
}


if hasmouse = true then {
    if !mouse_check_button(mb_left) then {
        hasmouse = false;
        global.mousefrozen = false;
    }
    var dopass = false
    if horizontal = true then {
        var f = global.uiz_mouseswipedx / width
        f = clamp(abs(f), 0, 1) * sign(f)
        if abs(global.uiz_mouseswipedx) &gt;= uiz_getposx_self(slidedist, slidedisttype) then {
            dopass = true
        }
    } else {
        var f = global.uiz_mouseswipedy / height
        f = clamp(abs(f), 0, 1) * sign(f)
        if abs(global.uiz_mouseswipedy) &gt;= uiz_getposy_self(slidedist, slidedisttype) then {
            dopass = true
        }
    }
    var of = f;
    var setdir = sign(f);
    if (setdir = 1 and oldhasmouseframe = 0) or(setdir = -1 and oldhasmouseframe = frames) then {
        setdir = 0;
        dir = 0;
    }
    f = abs(f)
    if horizontal = true then {
        moveback = -uiz_sign(global.lastmousemovedxsign) * dir
    } else {
        moveback = -uiz_sign(global.lastmousemovedysign) * dir
    }
    /*
    if dopass = false then {
        moveback = -1
    }
    */

    if dir != setdir and setdir != 0 then {
        uiz_destroyobject_notself(newframe)
        update = true
        frame = oldhasmouseframe - setdir
        dir = setdir
    }

    if dir != 0 then {

        linearvalue = f;
        if dir = -1 then {
            fa = oldframe
            fb = newframe
        } else {
            fb = oldframe
            fa = newframe
            f = 1 - f;
        }
        
        if horizontal = true then {
            fa.posinframex = uiz_snapleft;
            fa.posinframey = uiz_snaptop;
            fb.posinframex = uiz_snapright;
            fb.posinframey = uiz_snaptop;
            fa.setpointx = f
            fb.setpointx = f
        } else {
            fa.posinframex = uiz_snapleft;
            fa.posinframey = uiz_snaptop;
            fb.posinframex = uiz_snapleft;
            fb.posinframey = uiz_snapbottom;
            fa.setpointy = f
            fb.setpointy = f
        }

        uiz_fixgeneralpos(fa)
        uiz_fixgeneralpos(fb)
        uiz_fixchildren(fa, true)
        uiz_fixchildren(fb, true)
        if instance_exists(tabslider) then {
            if hasmouse then {
                //sdbm("placey",tabslider,frame,of)
                //uiz_tabslider_setvalue(tabslider,frame,abs(of),true)
                if moveback = -1 then {
                    //sdbm("set frame to old", oldclickframe, of)
                    uiz_tabslider_setvalue(tabslider, oldclickframe, abs( of ), true);
                } else {
                    //sdbm("set frame to", frame, of )
                    uiz_tabslider_setvalue(tabslider, frame, abs( of ));
                }
            } else {
                    tabslider.value=-1;//lord foregive me for this dirty, dirty hack.
                if moveback = -1 then {
                    frame=oldclickframe;
                }
                uiz_tabslider_setvalue(tabslider, frame, abs( of ));
            }
        }
    }


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update from tabslider
if instance_exists(tabslider) then{
if tabslider.updated=true then{
uiz_sliderstruct_setframe(id,tabslider.value)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
