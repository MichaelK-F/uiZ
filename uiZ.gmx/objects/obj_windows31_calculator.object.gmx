<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window=0;
display=0;
button_C=0;
button_CE=0;
button_back=0;
display_M=0;
frame_grid_buttons=0;
grid_buttons=0;
action=""
numberone=""
setaction=false;
hasmem=false;
mem=""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check for pressed buttons:
if instance_exists(grid_buttons) and instance_exists(display) then{
//control top buttons.
if instance_exists(button_C) and button_C.updated=true then{
display.text=""
numberone="";
}
if instance_exists(button_CE) and button_CE.updated=true then{
display.text=""
}
if instance_exists(button_back) and button_back.updated=true then{
display.text=string_copy(display.text,1,string_length(display.text)-1)
}

var mi=uiz_grid_cellsw(grid_buttons);
var me=uiz_grid_cellsh(grid_buttons);
for(var i=0;i&lt;mi;i++){
for(var e=0;e&lt;me;e++){
var o=uiz_gridobject(grid_buttons,i,e)
if instance_exists(o) and o.updated=true then{
switch(i){
case 0:
//M functions
switch(e){
case 0:
//MC
hasmem=false
mem=""
display_M.text=""
break;
case 1:
//MR
if hasmem=true then{
display.text=mem;}
break;
case 2:
//MS
hasmem=true
mem=display.text
display_M.text="M"
break;
case 3:
//M+
if hasmem=true then{
var n=real(mem)+real(display.text);
mem=string_format(n,floor(log10(floor(n))),uiz_realgetdecimalpoints(n,10));
}
break;
}
break;
case 1:
//Left row of numbers
if setaction=true then{display.text=""; setaction=false;}
display.text=display.text+string(max(7-e*3,0))
break;
case 2:
//Middle row of numbers
if setaction=true then{display.text=""; setaction=false;}
if e=me then{
//flip bit
var r=real(display.text)
if r=0 then{display.text="-"}else{
display.text=string(-r)}
}else{
display.text+=string(8-e*3)
}
break;
case 3:
//Right row of numbers
if setaction=true then{display.text=""; setaction=false;}
if e=me-1 then{
//add decimal point
if uiz_stringfind(display.text,".")=0 then{display.text+="."}
}else{
display.text+=string(9-e*3)
}
break;
case 4:
setaction=true;
action=o.text;
numberone=display.text
break;
case 5:
if e=me-2 then{
var n=1/real(display.text);
display.text=string_format(n,floor(log10(floor(n))),uiz_realgetdecimalpoints(n,10))
}else{
if e=me-1 then{
//calculate answer
var n1=real(numberone)
var n2=real(display.text)
switch(action){
case "/":
if n2!=0 then{
display.text=string(n1/n2)
}else{
display.text="ERROR division by 0"
}
break;
case "*":
display.text=string(n1*n2)
break;
case "-":
display.text=string(n1-n2)
break;
case "+":
display.text=string(n1+n2)
break;
case "sqrt":
display.text=string(sqrt(n2))
break;
case "%":
display.text=string(n1 mod n2)
break;
case "1/x":
display.text=string(1/n2)
break;
}
numberone="";
action="";
setaction=false;
}else{
setaction=true;
action=o.text;
numberone=display.text
}
}
break;
}


}
}
}

}
if !instance_exists(window) then{instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
