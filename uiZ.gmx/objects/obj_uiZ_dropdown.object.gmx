<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 20
//#objectversion 1.0
uiz_objinit()
value=0
buttoncolor=c_white//c//button color//
buttononcolor=c_gray//c//button mouse over color//
buttonincolor=c_black//c//button mouse click color//
buttontrianglecolor=c_black//c//button triangle color//
buttontriangleoncolor=c_dkgray//c//button triangle mouse over color//
buttontriangleincolor=c_white//c//button triangle mouse click color//
buttonmargin=3//v//button margin//
trianglemargin=4//v//triangle margin//
uselist=-1
masklist=-1
maskvalue=0;
selected=0
select=0
value=""
ucolor=buttoncolor
icolor=buttontrianglecolor
textcolor=c_black//c//text color//
menuis=0
menu=noone;
cancreate=1
containtext=1//b//contain text//
updated=0
update=0
font=-1;


mousebackcolor=c_blue//c//mousemenu background color//
mousebackalpha=0.5//v//mousemenu background alpha//
mouseitemcolor=c_white//c//mousemenu item color//
mouseitemoncolor=c_ltgray//c//mousemenu item mouse over color//
mouseitemincolor=c_gray//c//mousemenu item mouse click color//
mouseitemalpha=1//v//mousemenu item alpha//
mousemargin=3//v//mousemenu item margin//
mousetextcolor=c_black//c//mousemenu text color//
mousefont=-1//f//mousemenu font//


hasbackground=true;
texturescript=uiz_back_circlestitch//i//texturescript//
texturescript_over=-1//i//texturescript over//
texturescript_in=-1//i//texturescript in//
texturescript_out=-1//i//texturescript out//

sprite_normal=spr_uiZ_border1//p//sprite normal//
color_normal=c_white//c//color normal//
margin_normal=5//v//margin normal//
sprite_texturemode=uiz_texturemode_fill//t//texturemode normal
border_texturemode=-1//t//texturemode border//

sprite_over=spr_uiZ_border1_over//p//sprite over//
color_over=-1//c//color over//
margin_over=-1//v//margin over//

sprite_in=spr_uiZ_border1_in//p//sprite in//
color_in=-1//c//color in//
margin_in=-1//v//margin in//

sprite_out=spr_uiZ_border1_in//p//sprite out//
color_out=-1//c//color out//
margin_out=-1//v//margin out//


ucolor=buttoncolor;
icolor=buttontrianglecolor;
buttonsz=min(width*0.5,height);
updatebutton=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var lucolor=ucolor;
if global.mousefrozen=0 and point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),slx+buttonmargin-buttonsz,sy+height/2-buttonsz/2+buttonmargin,slx-buttonmargin,sy+height/2+buttonsz/2-buttonmargin) then{
if kmouseover&gt;0 then{uiz_set_cursor(cr_handpoint)}
if mouse_check_button(mb_left) then{ucolor=buttonincolor;icolor=buttontriangleincolor}else{ucolor=buttononcolor;icolor=buttontriangleoncolor}
if mouse_check_button_released(mb_left) and cancreate=1 then{
if menuis=1 and instance_exists(menu) then{
menuis=0
uiz_updater_unstep();
if instance_exists(menu){
uiz_destroyobject(menu)}
}else{
menuis=1
menu=instance_create(0,0,obj_uiZ_mousemenu)
if masklist!=-1 and ds_exists(masklist,ds_type_list) and ds_list_size(masklist)&gt;=ds_list_size(uselist) then{
menu.uselist=masklist
}else{
menu.uselist=uselist
}
menu.y=rly
menu.x=rx
menu.posinframex=px;
menu.posvalx=rx;
menu.posvalw=width;
menu.posvalwtype=px;
menu.backcolor=mousebackcolor
menu.backalpha=mousebackalpha
menu.itemcolor=mouseitemcolor
menu.itemoncolor=mouseitemoncolor
menu.itemincolor=mouseitemincolor
menu.itemalpha=mouseitemalpha
menu.margin=mousemargin
menu.textcolor=mousetextcolor
menu.font=mousefont
menu.destroyyfunction=uiz_zero;
//set returnscript
uiz_mousemenu_setListenerScript(menu,id,uiz_dropdown_returnscript);
uiz_fixmousemenupos(menu)
}

}
if mouse_check_button_released(mb_left) then{cancreate=1}
}else{ucolor=buttoncolor;icolor=buttontrianglecolor;cancreate=1;}
if lucolor!=ucolor then{
updatebutton=true;
uiz_updater_FixViews_area_selfmarked(rlx+buttonmargin-buttonsz,ry+height/2-buttonsz/2+buttonmargin,rlx-buttonmargin,ry+height/2+buttonsz/2-buttonmargin);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if kmouseover=uiz_nomouse and (ucolor!=buttoncolor or icolor!=buttontrianglecolor) then{
    ucolor=buttoncolor;
    icolor=buttontrianglecolor;
    updatebutton=true;
    uiz_updater_FixViews_area_selfmarked(rlx+buttonmargin-buttonsz,ry+height/2-buttonsz/2+buttonmargin,rlx-buttonmargin,ry+height/2+buttonsz/2-buttonmargin);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>update=0
if uiz_cntn() then{
if font&gt;-1 then{draw_set_font(font)}
//draw back
//draw_square(rx,ry,rlx,rly,backcolor,alpha)
var doupdatebutton;
if updatebutton=true and uiz_selfmarked=true then{doupdatebutton=true;}else{
doupdatebutton=false;
}
if doupdatebutton=false then{
uiz_back()
}
//draw button
var mk=uselist

if uselist!=-1 and ds_exists(uselist,ds_type_list) and ds_list_size(uselist)&gt;selected then{value=string(uselist[| selected]);maskvalue=value}else{value=""}
if masklist!=-1 and ds_exists(masklist,ds_type_list) and ds_list_size(masklist)&gt;=ds_list_size(uselist) then{mk=masklist;maskvalue=string(masklist[| selected])}else{maskvalue=value}
//if doupdatebutton=true then{
draw_square(rlx+buttonmargin-buttonsz,ry+height/2-buttonsz/2+buttonmargin,rlx-buttonmargin,ry+height/2+buttonsz/2-buttonmargin,ucolor,1)
//draw the dropdown triangle
draw_primitive_begin_texture(pr_trianglestrip,sprite_get_texture(spr_square,0));
draw_vertex_texture_colour(rlx+buttonmargin-buttonsz+trianglemargin,ry+height/2-buttonsz/2+buttonmargin+trianglemargin,0.5,0.5,icolor,1)
draw_vertex_texture_colour(rlx-buttonmargin-trianglemargin,ry+height/2-buttonsz/2+buttonmargin+trianglemargin,0.5,0.5,icolor,1)
draw_vertex_texture_colour(rlx-buttonsz/2,ry+height/2+buttonsz/2-buttonmargin-trianglemargin,0.5,0.5,icolor,1)
draw_primitive_end()
//}
if doupdatebutton=false then{
//draw text
draw_set_color(textcolor)
draw_set_valign(fa_center)
var txt="";
if containtext=1 then{
txt=uiz_gettext_contained(string(maskvalue),width-buttonsz)
}else{txt=value}
draw_text(rx+margin_normal,ry+height/2,txt)
draw_set_valign(fa_top)
}
uiz_containend()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
