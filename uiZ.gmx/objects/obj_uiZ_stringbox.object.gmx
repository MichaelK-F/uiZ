<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///#define uiZ
//#sprite images
//#spritenum 24
//#objectversion 1.0
uiz_objinit()
value=""//s//initial value//
textcolor=c_black//c//text color//
selectbackcolor=c_blue//c//selection background color//
selecttextcolor=c_red//c//selection text color//
cursorcolor=c_black//c//typing cursor color//
margin=4//v//margin//
font=-1//f//font//
typeanimationin=uiz_exponential_in//a//type animation in//
typeanimationout=uiz_exponential_in//a//type animation out//
countspeed=1//v//type animation time//
maxlength=0//v//max length//
//accountspeed=0.08
mouseSelectionMovementSpeed=0.05//v//mouse selection movement (sec per char)//
keyHoldingTypingSpeed=0.05//v//typing speed when holding any key (sec per char)//
keyHoldingTypingTimer=0.75//v//time in sec. between holding down a key and rapid typing mode//
accountspeed=.5//v//rapid mode count time//
accbetween=0.000001//v//rapid mode speed//
messagetext="Enter a value"//s//message text on mobile//
hasbackground=true//b//enable background//
texturescript=uiz_back_circlestitch//i//texturescript//
texturescript_over=-1//i//texturescript over//
texturescript_in=-1//i//texturescript in//
texturescript_out=-1//i//texturescript out//
cursorwidth=2//v//width of the typing cursor//

acceptOnlyNumbers=true//b//accept only digits and a single .//
acceptOnlyIntegers=false//b//don't accept floating point numbers//
acceptOnlyPositive=true//b//don't accept floating point numbers//
numberCounter_enable=true//b//enable numberical up and down buttons//
numberCounter_customWidth=true//b//enable custom width vs square buttons//
numberCounter_interval=1//v//numberical up/down button step size//
numberCounter_rapidTimer=0.75//v//numberical button hold time//
numberCounter_rapidSpeed=0.05//v//numberical button rapid increase interval//
numberCounter_width=0.1//b//numberical up and down button width//
numberCounter_widthType=dp//b//numberical up and down button width type//

numberCounter_minButtonSprite=spr_uiZ_min//s//subtract button sprite//
numberCounter_minButtonColor=c_white//c//subtract button normal color//
numberCounter_minButtonOnColor=c_white//c//subtract button mouse over color//
numberCounter_minButtonOverColor=c_white//c//subtract button mouse in color//
numberCounter_minButtonAlpha=c_white//c//subtract button alpha//

numberCounter_maxButtonSprite=spr_uiZ_plus//s//add button sprite//
numberCounter_maxButtonColor=c_white//c//add button normal color//
numberCounter_maxButtonOnColor=c_white//c//add button mouse over color//
numberCounter_maxButtonOverColor=c_white//c//add button mouse in color//
numberCounter_maxButtonAlpha=c_white//c//add button alpha//


sprite_normal=spr_uiZ_border1//p//sprite normal//
color_normal=c_white//c//color normal//
margin_normal=8//v//margin normal//
sprite_texturemode=uiz_texturemode_fill//t//texturemode normal
border_texturemode=-1//t//texturemode border//

sprite_over=spr_uiZ_border1_over//p//sprite over//
color_over=-1//c//color over//
margin_over=-1//v//margin over//

sprite_in=spr_uiZ_border1_in//p//sprite in//
color_in=-1//c//color in//
margin_in=-1//v//margin in//

sprite_out=spr_uiZ_border1_in//p//sprite out//
color_out=-1//c//color out//
margin_out=-1//v//margin out//
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stringboxspecific technical stuff
str_real="-5.6.356THIS IS A TEST THAT THIS IS MAY BE A TEST FOR IT IS A TEST IT IS.";//the full string
uiz_stringbox_str_real_init();
ilx_minwidth = uiz_getposx_self(numberCounter_width,numberCounter_widthType);
if numberCounter_enable then{
i_ilx = ilx-ilx_minwidth;//internal ilx
}else{
i_ilx = ilx;
}
selfmarked_text = false;
button_state_min = 0;//min button state
button_state_max = 0;//max button state
button_state_count = 0;
button_state_max_count = 0;
button_state_max_count_rapid = 0;
sel_beg_fix = "";//a hacky bugfix variable

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if uiz_stringbox_event_disableEvent() exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_stringbox_event_handleTypeCursorAnimation();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_stringbox_event_debugLeftRight();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check keys
uiz_stringbox_event_checkKeys();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///handle mouse state
if kmouseover&gt;0 and uiz_getmouse_x()&lt;i_ilx then{uiz_set_cursor(cr_beam)}else{
uiz_set_cursor(cr_default);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_stringbox_event_disableMouseGrab();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if uiz_getmouse_x()&lt;i_ilx then{
uiz_stringbox_event_makeSelections();
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check buttons
if numberCounter_enable then{
button_state_max = uiz_draw_spritebutton_step(i_ilx,max(iy+iheight/2-ilx_minwidth,iy),ilx,iy+iheight/2,button_state_max);
button_state_min = uiz_draw_spritebutton_step(i_ilx,iy+iheight/2,ilx,min(iy+iheight/2+ilx_minwidth,ily),button_state_min);

var addVal = 0;

if uiz_positify(button_state_max)==uiz_mousereleased then{
    addVal += 1;
    button_state_count = 0;
    button_state_max_count_rapid = 1;
}else{
    if uiz_positify(button_state_max)==uiz_mouseclick then{
        button_state_count+=uiz_sc(numberCounter_rapidTimer)
    }
}

if uiz_positify(button_state_min)==uiz_mousereleased then{
    addVal -= 1;
    button_state_count = 0;
    button_state_max_count_rapid = 1;
}else{
    if uiz_positify(button_state_min)==uiz_mouseclick then{
        button_state_count+=uiz_sc(numberCounter_rapidTimer)
    }
}

if button_state_count&gt;=1 then{//if we should be rapid typing
    button_state_max_count_rapid+=uiz_sc(numberCounter_rapidSpeed);
    if (button_state_max_count_rapid&gt;=1){
        button_state_max_count_rapid = 0;
        
        //increase correct state
        if uiz_positify(button_state_max)==uiz_mouseclick then{
            addVal += 1;
        }else{
            addVal -= 1;
        }
        
    }
}

if(addVal&lt;0 and acceptOnlyPositive &amp;&amp; real(str_real)&lt;1){ addVal=0; uiz_stringbox_setvalue(id,"0"); }//fix bug when acceptOnlyPositive is enabled pressing - on a 0 results in a 1 while it shouldn't do anything.

if addVal!=0 then{
    //sdbm("testVal1",str_real);
    //sdbm("testVal2",str_real,uiz_string_real_getIntLength(str_real),uiz_string_real_getFracLength(str_real))
    //uiz_stringbox_setvalue(id, string_format(real(str_real)+addVal*numberCounter_interval,uiz_string_real_getIntLength(str_real),uiz_string_real_getFracLength(str_real)));
    uiz_stringbox_setvalue(id, uiz_string_fromReal(real(str_real)+addVal*numberCounter_interval));
}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_stringbox_event_mouseCheck();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if uiz_cntn() then{
    uiz_stringbox_event_draw();
    if numberCounter_enable then{
        //draw buttons
        if !uiz_selfmarked or button_state_min&lt;0 then{
            uiz_draw_spritebutton_state(i_ilx,iy+iheight/2,ilx,min(iy+iheight/2+ilx_minwidth,ily),numberCounter_minButtonColor,numberCounter_minButtonOnColor,numberCounter_minButtonOverColor,numberCounter_minButtonSprite,1,button_state_min);
        }
        if !uiz_selfmarked or button_state_max&lt;0 then{
            uiz_draw_spritebutton_state(i_ilx,max(iy+iheight/2-ilx_minwidth,iy),ilx,iy+iheight/2,numberCounter_maxButtonColor,numberCounter_maxButtonOnColor,numberCounter_maxButtonOverColor,numberCounter_maxButtonSprite,1,button_state_max);
        }
    }
    uiz_containend()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_endobject()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
draw_square(100,90,200,200,$dddddd,1)

draw_set_valign(fa_top);
draw_set_color(c_black)
draw_square(100,100,100+string_width(sel_str_beg),115,$aaaaaa,1)
draw_set_color(c_black)
draw_text(100,100,sel_str_beg)
draw_square(100,115,100+string_width(sel_str_mid),130,$aaaaaa,1)
draw_set_color(c_black)
draw_text(100,115,sel_str_mid)
draw_square(100,130,100+string_width(sel_str_end),145,$aaaaaa,1)
draw_set_color(c_black)
draw_text(100,130,sel_str_end)
draw_square(100,145,100+string_width(sel_str_beg_m),160,$aaaaaa,1)
draw_set_color(c_blue);
draw_text(100,145,sel_str_beg_m);
draw_square(100,160,100+string_width(sel_str_end_m),175,$aaaaaa,1)
draw_set_color(c_green);
draw_text(100,160,sel_str_end_m);
draw_set_color(c_fuchsia);
draw_text(100,175,str_real);
draw_set_color(c_black);
draw_text(100,190,hasselection);
draw_set_color(c_maroon);
draw_text(100,205,selpos_dis);
//draw_set_color(c_black);
draw_text(100,220,selpos_dis_px);
draw_set_color(c_black);
draw_text(100,235,keyboard_lastchar);
draw_set_color(c_black);
draw_text(100,250,ord(keyboard_lastchar));
draw_set_color(c_orange);
draw_text(100,265,selpmin);
draw_text(100,280,selpmax);
draw_text(100,295,typepos_dis);
draw_text(100,310,str_dis_size);
draw_text(100,325,"str_dis_begin: "+string(str_dis_begin));
draw_text(100,340,"str_dis_end: "+string(str_dis_end));
//draw_set_color(c_red);
//draw_text(100,325,d);
//d="";
/*
draw_set_color(c_red);
draw_line(tp1,ry,tp1,rly)
draw_set_color(c_green);
draw_line(tp2,ry,tp2,rly)
*/
/*
draw_set_color(c_orange);
draw_line(selpos_dis_min_px_bound,ry,selpos_dis_min_px,rly)
draw_set_color($3d6040);
draw_line(selpos_dis_max_px_bound,ry,selpos_dis_max_px,rly)
draw_set_color(c_fuchsia);
draw_line(minoldtest,ry,minoldtest,rly)
draw_set_color(c_lime);
draw_line(maxoldtest,ry,maxoldtest,rly)

/*
draw_set_color(c_red);
draw_text(ix,ry,str_dis);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
