<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///this object was used to generate pictures for the manual.
anim=0;
testvalue=81
testvalue2=81
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_released(vk_right){anim++;}
if keyboard_check_released(vk_left){anim--;}
if keyboard_check_released(vk_up){testvalue+=1;}
if keyboard_check_released(vk_down){testvalue-=1}
if keyboard_check_released(vk_end){testvalue2+=1;}
if keyboard_check_released(vk_home){testvalue2-=1;}
draw_set_color(c_white)
draw_text(10,10,anim);
draw_text(10,20,testvalue);
draw_text(10,30,testvalue2);
w=100;
h=100;
topmargin=.5;
draw_rectangle(x,y-h*topmargin,x+w,y+h+h*topmargin,0);
x=0;
y=0;
surf = surface_create(w,h+h*topmargin*2);
for(anim=0;anim&lt;38;anim++){
surface_set_target(surf);
draw_clear(c_white);
draw_set_color(c_red)
draw_line(x,y,x+w,y);
draw_line(x,y+h,x+w,y+h);
draw_set_color(c_blue)
draw_primitive_begin(pr_linestrip)
for(var i=0;i&lt;=w;i++){
var animres=uiz_animation_getFunction(i/w,anim)
draw_vertex(x+i,y+h-animres*h);
}
draw_primitive_end();

draw_set_color(c_green);
draw_primitive_begin(pr_linestrip)
for(var i=0;i&lt;=w;i++){
var animres=uiz_animation_getFunction(i/w,anim)
animres=uiz_animation_revertFunction(animres,anim)
draw_vertex(x+i,y+h-animres*h);
}
draw_primitive_end();
draw_set_color(c_purple);
draw_primitive_begin(pr_linestrip)
for(var i=0;i&lt;=w;i++){
var animres=uiz_animation_getFunction(i/w,anim)
animres=uiz_animation_revertFunction(animres,anim)
var animres=uiz_animation_getFunction(animres,anim)
draw_vertex(x+i,y+h-animres*h);
}
draw_primitive_end();
surface_reset_target();
surface_save(surf,string(anim)+'.png');
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
