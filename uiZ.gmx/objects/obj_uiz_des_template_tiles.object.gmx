<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load data from ini
var wv,o;
ini_open(ini)
if (global.loadingobjects=0 and ds_exists(itemlist,ds_type_list)) or (global.loadingobjects=1 and ds_exists(updatelist,ds_type_list)) then{
if global.loadingobjects=0 then{var l=itemlist}else{var l=updatelist}
var sz=ds_list_size(l)
for(i=0;i&lt;sz;i++){
if global.loadingobjects=0 then{o=l[| i]}else{
o=uiz_des_object_loadingobjects_bussy(i);}
if instance_exists(o){
if o.rlorstr=1 then{wv=ini_read_string(string(object.uiobject),o.updatetype,o.defval)}else{
wv=ini_read_real(string(object.uiobject),o.updatetype,o.defval)}
uiz_des_setvalueof(o,wv)

switch(o.updatetype){
case "name": o.value=obj_uiz_des_name(object,wv) break;
case "parent": if wv&gt;-1 then{var setto=obj_uiz_designer.aflist[| wv];if setto.object_index=obj_uiZ_frameset then{uiz_des_framesetparent(wv) ini_open(ini)}else{uiz_setParent(object,setto)} }
case "x": object.posvalx=wv;object.x=wv;x=wv;posvalx=wv; break;
case "y": object.posvaly=wv;object.y=wv;y=wv;posvaly=wv; break;
case "posvalw": object.posvalw=wv;posvalw=wv; break;
case "posvalh": object.posvalh=wv;posvalh=wv; break;
case "posvalwtype": var k=global.fxconstantlist[|wv]; object.posvalwtype=k;posvalwtype=k;o.selected=wv; break;
case "posvalhtype": var k=global.fyconstantlist[|wv]; object.posvalhtype=k;posvalhtype=k;o.selected=wv; break;
case "posvalxtype": var k=global.xconstantlist[|wv]; object.posinframex=k;posinframex=k;o.selected=wv; break;
case "posvalytype": var k=global.yconstantlist[|wv]; object.posinframey=k;posinframey=k;o.selected=wv; break;
case "setpointx": var k=global.xcenterconstantlist[|wv]; object.setpointx=k; setpointx=k; o.selected=wv; break;
case "setpointy": var k=global.ycenterconstantlist[|wv]; object.setpointy=k; setpointy=k; o.selected=wv; break;case "itemwidth": object.itemwidth=wv;itemwidth=wv; break;
case "itemwidthtype": object.itemwidthtype=wv;itemwidthtype=wv; break;
case "itemheight": object.itemheight=wv;itemheight=wv; break;
case "itemheighttype": object.itemheighttype=wv;itemheighttype=wv; break;
case "marginwidth": object.marginwidth=wv;marginwidth=wv; break;
case "marginwidthtype": object.marginwidthtype=wv;marginwidthtype=wv; break;
case "marginheight": object.marginheight=wv;marginheight=wv; break;
case "marginheighttype": object.marginheighttype=wv;marginheighttype=wv; break;
case "minmargin": object.minmargin=wv;minmargin=wv; break;
case "minmargintype": object.minmargintype=wv;minmargintype=wv; break;
case "scrollway": object.scrollway=wv;scrollway=wv; break;
case "keepratio": object.keepratio=wv;keepratio=wv; break;
case "scaleup": object.scaleup=wv;scaleup=wv; break;
case "enablescroll": object.enablescroll=wv;enablescroll=wv; break;
case "enablescrollbar": object.enablescrollbar=wv;enablescrollbar=wv; break;
case "scrollbarsize": object.scrollbarsize=wv;scrollbarsize=wv; break;
case "scrollbarsizetype": object.scrollbarsizetype=wv;scrollbarsizetype=wv; break;
case "scrollbarsprite": object.scrollbarsprite=asset_get_index(wv);scrollbarsprite=wv; break;
case "scrollbarcolor": object.scrollbarcolor=wv;scrollbarcolor=wv; break;
case "scrollbarbacktexturemode": var k=global.texconstantlist[|wv]; if k=undefined then{k=o.defval} object.scrollbarbacktexturemode=k;scrollbarbacktexturemode=k; break;
case "items": object.items=wv;items=wv; break;
}
}
}
uiz_fixgeneralpos(object)

}

ini_close();
if overdestroy=1 then{instance_destroy()}
init=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
uiz_des_object_alarm0()

itemwidthbox=uiz_des_addtolist_val("item width:","itemwidth",0.4)
itemwidthtypebox=uiz_des_addtolist_list("item width type:","itemwidthtype",dp,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
itemheightbox=uiz_des_addtolist_val("item height:","itemheight",0.4)
itemheighttypebox=uiz_des_addtolist_list("item height type:","itemheighttype",dp,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
marginwidthbox=uiz_des_addtolist_val("margin width:","marginwidth",20)
marginwidthtypebox=uiz_des_addtolist_list("margin width type:","marginwidthtype",px,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
marginheightbox=uiz_des_addtolist_val("margin height:","marginheight",20)
marginheighttypebox=uiz_des_addtolist_list("margin height type:","marginheighttype",px,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
minmarginbox=uiz_des_addtolist_val("minimal magin:","minmargin",2)
minmargintypebox=uiz_des_addtolist_list("minimal margin type:","minmargintype",px,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
scrollwaybox=uiz_des_addtolist_bool("scroll direction:","scrollway",uiz_vertical)
keepratiobox=uiz_des_addtolist_bool("keep ratio when scaling:","keepratio",true)
scaleupbox=uiz_des_addtolist_bool("scale items or margins:","scaleup",false)
enablescrollbox=uiz_des_addtolist_bool("enable scroll:","enablescroll",true)
enablescrollbarbox=uiz_des_addtolist_bool("enable scroll bar:","enablescrollbar",!global.systemsupportstouch)
scrollbarsizebox=uiz_des_addtolist_val("scrollbar size:","scrollbarsize",0.2)
scrollbarsizetypebox=uiz_des_addtolist_list("scrollbar size type:","scrollbarsizetype",dp,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
scrollbarspritebox=uiz_des_addtolist_sprite("sprite:","scrollbarsprite","spr_uiZ_scrollbar")
scrollbarcolorbox=uiz_des_addtolist_color("color:","scrollbarcolor",c_white)
scrollbarbacktexturemodebox=uiz_des_addtolist_list("texturemode:","scrollbarbacktexturemode",uiz_texturemode_fill,global.texconstantlist,global.texconstantnamelist)
itemsbox=uiz_des_addtolist_val("number of items:","items",50)


uiz_des_object_alarm0end()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_des_object_beginstep()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.selobj=id then{
if isloading=0 and uiz_des_checkitems()=1 then{
ini_open(ini)
var o=object;
var u=updateobject;
var v=u.value
var apply=1
if u.rlorstr=1 then{wv=ini_read_string(string(o.uiobject),updatetype,"")}else{wv=ini_read_real(string(o.uiobject),updatetype,0)}
switch(updatetype){
case "name": if u.updated=1 then{wv=obj_uiz_des_name(o,v)}else{apply=0;} break;
case "parent": 
wv=ds_list_find_index(obj_uiz_designer.aflist,global.newparentlist[|u.select]);
if global.newparentlist[|u.select].object_index=obj_uiZ_frameset then{
//give choice
uiz_des_framewindow_parent(global.newparentlist[|u.select])
ini_open(ini)
}else{uiz_setParent(object,global.newparentlist[|u.select]) }  break;
case "x": o.posvalx=v; posvalx=v; wv=v; break;
case "y": o.posvaly=v; posvaly=v; wv=v; break;
case "posvalw": o.posvalw=v; posvalw=v; wv=v; break;
case "posvalh": o.posvalh=v; posvalh=v; wv=v; break;
case "posvalwtype": o.posvalwtype=u.select; posvalwtype=u.select; wv=u.select; break;
case "posvalhtype": o.posvalhtype=u.select; posvalhtype=u.select; wv=u.select; break;
case "posvalxtype": o.posinframex=real(u.value); posinframex=real(u.value); wv=u.select; break;
case "posvalytype": o.posinframey=real(u.value); posinframey=real(u.value); wv=u.select; break;
case "setpointx": o.setpointx=real(u.value); wv=real(u.value); wv=u.select; break;
case "setpointy": o.setpointy=real(u.value); wv=real(u.value); wv=u.select; break;
case "itemwidth": o.itemwidth=v; wv=v; break;
case "itemwidthtype": o.itemwidthtype=real(v); wv=real(v); break;
case "itemheight": o.itemheight=v; wv=v; break;
case "itemheighttype": o.itemheighttype=real(v); wv=real(v); break;
case "marginwidth": o.marginwidth=v; wv=v; break;
case "marginwidthtype": o.marginwidthtype=real(v); wv=real(v); break;
case "marginheight": o.marginheight=v; wv=v; break;
case "marginheighttype": o.marginheighttype=real(v); wv=real(v); break;
case "minmargin": o.minmargin=v; wv=v; break;
case "minmargintype": o.minmargintype=real(v); wv=real(v); break;
case "scrollway": o.scrollway=v; wv=v; break;
case "keepratio": o.keepratio=v; wv=v; break;
case "scaleup": o.scaleup=v; wv=v; break;
case "enablescroll": o.enablescroll=v; wv=v; break;
case "enablescrollbar": o.enablescrollbar=v; wv=v; break;
case "scrollbarsize": o.scrollbarsize=v; wv=v; break;
case "scrollbarsizetype": o.scrollbarsizetype=real(v); wv=real(v); break;
case "scrollbarsprite": o.scrollbarsprite=asset_get_index(v); wv=v; break;
case "scrollbarcolor": o.scrollbarcolor=v; wv=v; break;
case "scrollbarbacktexturemode": o.scrollbarbacktexturemode=real(v); wv=u.selected; break;
case "items": o.items=v; wv=v; break;
}
uiz_fixgeneralpos(o)
uiz_fixgeneralpos(id)
uiz_fixChildren(o,1)
if apply=1 then{
if u.rlorstr=1 then{ini_write_string(string(o.uiobject),updatetype,wv)}else{ini_write_real(string(o.uiobject),updatetype,wv)}
}
ini_close()
}
if isloading&gt;0 then{isloading--;}else{isloading=0;}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_destroyDsList(updatelist)
uiz_destroyDsList(updaterlorstrlist)
uiz_destroyDsList(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_destroyDsList(updatelist)
uiz_destroyDsList(updaterlorstrlist)
uiz_destroyDsList(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_draw()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
