<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load data from ini
var wv,o;
ini_open(ini)
if (global.loadingobjects=0 and ds_exists(itemlist,ds_type_list)) or (global.loadingobjects=1 and ds_exists(updatelist,ds_type_list)) then{
if global.loadingobjects=0 then{var l=itemlist}else{var l=updatelist}
var sz=ds_list_size(l)
for(i=0;i&lt;sz;i++){
if global.loadingobjects=0 then{o=l[| i]}else{
o=uiz_des_object_loadingobjects_bussy(i);}
if instance_exists(o){
if o.rlorstr=1 then{wv=ini_read_string(string(object.uiobject),o.updatetype,o.defval)}else{
wv=ini_read_real(string(object.uiobject),o.updatetype,o.defval)}
uiz_des_setvalueof(o,wv)

switch(o.updatetype){
case "name": o.value=obj_uiz_des_name(object,wv) break;
case "parent": if wv&gt;-1 then{var setto=obj_uiz_designer.aflist[| wv];if setto.object_index=obj_uiZ_frameset then{uiz_des_framesetparent(wv) ini_open(ini)}else{uiz_setParent(object,setto)} }
case "x": object.posvalx=wv;object.x=wv;x=wv;posvalx=wv; break;
case "y": object.posvaly=wv;object.y=wv;y=wv;posvaly=wv; break;
case "posvalw": object.posvalw=wv;posvalw=wv; break;
case "posvalh": object.posvalh=wv;posvalh=wv; break;
case "posvalwtype": var k=global.fxconstantlist[|wv]; object.posvalwtype=k;posvalwtype=k;o.selected=wv; break;
case "posvalhtype": var k=global.fyconstantlist[|wv]; object.posvalhtype=k;posvalhtype=k;o.selected=wv; break;
case "posvalxtype": var k=global.xconstantlist[|wv]; object.posinframex=k;posinframex=k;o.selected=wv; break;
case "posvalytype": var k=global.yconstantlist[|wv]; object.posinframey=k;posinframey=k;o.selected=wv; break;
case "setpointx": var k=global.xcenterconstantlist[|wv]; object.setpointx=k; setpointx=k; o.selected=wv; break;
case "setpointy": var k=global.ycenterconstantlist[|wv]; object.setpointy=k; setpointy=k; o.selected=wv; break;case "destroylists": object.destroylists=wv;destroylists=wv; break;
case "barsize": object.barsize=wv;barsize=wv; break;
case "barsizetype": object.barsizetype=wv;barsizetype=wv; break;
case "textmargin": object.textmargin=wv;textmargin=wv; break;
case "minbarsize": object.minbarsize=wv;minbarsize=wv; break;
case "minbarsizetype": object.minbarsizetype=wv;minbarsizetype=wv; break;
case "mousemargin": object.mousemargin=wv;mousemargin=wv; break;
case "listheightmargin": object.listheightmargin=wv;listheightmargin=wv; break;
case "drawdivider": object.drawdivider=wv;drawdivider=wv; break;
case "dividercolor": object.dividercolor=wv;dividercolor=wv; break;
case "enabledivider": object.enabledivider=wv;enabledivider=wv; break;
case "cellcolor": object.cellcolor=wv;cellcolor=wv; break;
case "textcolor": object.textcolor=wv;textcolor=wv; break;
case "selectiononcolor": object.selectiononcolor=wv;selectiononcolor=wv; break;
case "selectionincolor": object.selectionincolor=wv;selectionincolor=wv; break;
case "font": if wv="none" then{object.font=-1;}else{object.font=asset_get_index(wv);}font=wv; break;
case "selectionmode": object.selectionmode=wv;selectionmode=wv; break;
case "texturescript": var k=global.texscriptconstantlist[|wv]; if k=undefined then{k=o.defval} object.texturescript=k;texturescript=k; break;
case "texturescript_over": var k=global.texscriptconstantlist[|wv]; if k=undefined then{k=o.defval} object.texturescript_over=k;texturescript_over=k; break;
case "texturescript_in": var k=global.texscriptconstantlist[|wv]; if k=undefined then{k=o.defval} object.texturescript_in=k;texturescript_in=k; break;
case "texturescript_out": var k=global.texscriptconstantlist[|wv]; if k=undefined then{k=o.defval} object.texturescript_out=k;texturescript_out=k; break;
case "sprite_normal": object.sprite_normal=asset_get_index(wv);sprite_normal=wv; break;
case "color_normal": object.color_normal=wv;color_normal=wv; break;
case "margin_normal": object.margin_normal=wv;margin_normal=wv; break;
case "sprite_texturemode": var k=global.texconstantlist[|wv]; if k=undefined then{k=o.defval} object.sprite_texturemode=k;sprite_texturemode=k; break;
case "border_texturemode": var k=global.texconstantlist[|wv]; if k=undefined then{k=o.defval} object.border_texturemode=k;border_texturemode=k; break;
case "sprite_over": object.sprite_over=asset_get_index(wv);sprite_over=wv; break;
case "color_over": object.color_over=wv;color_over=wv; break;
case "margin_over": object.margin_over=wv;margin_over=wv; break;
case "sprite_in": object.sprite_in=asset_get_index(wv);sprite_in=wv; break;
case "color_in": object.color_in=wv;color_in=wv; break;
case "margin_in": object.margin_in=wv;margin_in=wv; break;
case "sprite_out": object.sprite_out=asset_get_index(wv);sprite_out=wv; break;
case "color_out": object.color_out=wv;color_out=wv; break;
case "margin_out": object.margin_out=wv;margin_out=wv; break;
case "topbar_texturescript": var k=global.texscriptconstantlist[|wv]; if k=undefined then{k=o.defval} object.topbar_texturescript=k;topbar_texturescript=k; break;
case "topbar_texturescript_over": var k=global.texscriptconstantlist[|wv]; if k=undefined then{k=o.defval} object.topbar_texturescript_over=k;topbar_texturescript_over=k; break;
case "topbar_texturescript_in": var k=global.texscriptconstantlist[|wv]; if k=undefined then{k=o.defval} object.topbar_texturescript_in=k;topbar_texturescript_in=k; break;
case "topbar_texturescript_out": var k=global.texscriptconstantlist[|wv]; if k=undefined then{k=o.defval} object.topbar_texturescript_out=k;topbar_texturescript_out=k; break;
case "topbar_sprite_normal": object.topbar_sprite_normal=asset_get_index(wv);topbar_sprite_normal=wv; break;
case "topbar_color_normal": object.topbar_color_normal=wv;topbar_color_normal=wv; break;
case "topbar_margin_normal": object.topbar_margin_normal=wv;topbar_margin_normal=wv; break;
case "topbar_sprite_texturemode": var k=global.texconstantlist[|wv]; if k=undefined then{k=o.defval} object.topbar_sprite_texturemode=k;topbar_sprite_texturemode=k; break;
case "topbar_border_texturemode": var k=global.texconstantlist[|wv]; if k=undefined then{k=o.defval} object.topbar_border_texturemode=k;topbar_border_texturemode=k; break;
case "topbar_sprite_over": object.topbar_sprite_over=asset_get_index(wv);topbar_sprite_over=wv; break;
case "topbar_color_over": object.topbar_color_over=wv;topbar_color_over=wv; break;
case "topbar_margin_over": object.topbar_margin_over=wv;topbar_margin_over=wv; break;
case "topbar_sprite_in": object.topbar_sprite_in=asset_get_index(wv);topbar_sprite_in=wv; break;
case "topbar_color_in": object.topbar_color_in=wv;topbar_color_in=wv; break;
case "topbar_margin_in": object.topbar_margin_in=wv;topbar_margin_in=wv; break;
case "topbar_sprite_out": object.topbar_sprite_out=asset_get_index(wv);topbar_sprite_out=wv; break;
case "topbar_color_out": object.topbar_color_out=wv;topbar_color_out=wv; break;
case "topbar_margin_out": object.topbar_margin_out=wv;topbar_margin_out=wv; break;
}
}
}
uiz_fixgeneralpos(object)

}

ini_close();
if overdestroy=1 then{instance_destroy()}
init=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
uiz_des_object_alarm0()

destroylistsbox=uiz_des_addtolist_bool("destroy listlist's lists:","destroylists",true)
barsizebox=uiz_des_addtolist_val("bar size:","barsize",20)
barsizetypebox=uiz_des_addtolist_list("bar size type:","barsizetype",px,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
textmarginbox=uiz_des_addtolist_val("text pixel margin:","textmargin",3)
minbarsizebox=uiz_des_addtolist_val("minimum bar segment width:","minbarsize",20)
minbarsizetypebox=uiz_des_addtolist_list("minimum bar segment width type:","minbarsizetype",px,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
mousemarginbox=uiz_des_addtolist_val("mouse bar dividor margin:","mousemargin",5)
listheightmarginbox=uiz_des_addtolist_val("pixel cell margin:","listheightmargin",2)
drawdividerbox=uiz_des_addtolist_bool("draw divider:","drawdivider",true)
dividercolorbox=uiz_des_addtolist_color("divider color:","dividercolor",c_black)
enabledividerbox=uiz_des_addtolist_bool("enable divider:","enabledivider",true)
cellcolorbox=uiz_des_addtolist_color("cell grid color:","cellcolor",c_ltgray)
textcolorbox=uiz_des_addtolist_color("text color:","textcolor",c_black)
selectiononcolorbox=uiz_des_addtolist_color("selection color:","selectiononcolor",c_ltgray)
selectionincolorbox=uiz_des_addtolist_color("selection click color:","selectionincolor",c_gray)
fontbox=uiz_des_addtolist_font("font:","font","-1")
selectionmodebox=uiz_des_addtolist_val("selection mode:","selectionmode",2)
texturescriptbox=uiz_des_addtolist_list("texturescript:","texturescript",uiz_back_square,global.texscriptconstantlist,global.texscriptconstantnamelist,-global.texscriptconstantlist)
texturescript_overbox=uiz_des_addtolist_list("texturescript over:","texturescript_over",-1,global.texscriptconstantlist,global.texscriptconstantnamelist,-global.texscriptconstantlist)
texturescript_inbox=uiz_des_addtolist_list("texturescript in:","texturescript_in",-1,global.texscriptconstantlist,global.texscriptconstantnamelist,-global.texscriptconstantlist)
texturescript_outbox=uiz_des_addtolist_list("texturescript out:","texturescript_out",-1,global.texscriptconstantlist,global.texscriptconstantnamelist,-global.texscriptconstantlist)
sprite_normalbox=uiz_des_addtolist_sprite("sprite normal:","sprite_normal","spr_uiZ_border1")
color_normalbox=uiz_des_addtolist_color("color normal:","color_normal",c_white)
margin_normalbox=uiz_des_addtolist_val("margin normal:","margin_normal",0)
sprite_texturemodebox=uiz_des_addtolist_list("margin normal:","sprite_texturemode",uiz_texturemode_fill,global.texconstantlist,global.texconstantnamelist)
border_texturemodebox=uiz_des_addtolist_list("texturemode border:","border_texturemode",-1,global.texconstantlist,global.texconstantnamelist)
sprite_overbox=uiz_des_addtolist_sprite("sprite over:","sprite_over","spr_uiZ_border1_over")
color_overbox=uiz_des_addtolist_color("color over:","color_over",-1)
margin_overbox=uiz_des_addtolist_val("margin over:","margin_over",-1)
sprite_inbox=uiz_des_addtolist_sprite("sprite in:","sprite_in","spr_uiZ_border1_in")
color_inbox=uiz_des_addtolist_color("color in:","color_in",-1)
margin_inbox=uiz_des_addtolist_val("margin in:","margin_in",-1)
sprite_outbox=uiz_des_addtolist_sprite("sprite out:","sprite_out","spr_uiZ_border1_in")
color_outbox=uiz_des_addtolist_color("color out:","color_out",-1)
margin_outbox=uiz_des_addtolist_val("margin out:","margin_out",-1)
topbar_texturescriptbox=uiz_des_addtolist_list("texturescript:","topbar_texturescript",uiz_back_square,global.texscriptconstantlist,global.texscriptconstantnamelist,-global.texscriptconstantlist)
topbar_texturescript_overbox=uiz_des_addtolist_list("texturescript over:","topbar_texturescript_over",-1,global.texscriptconstantlist,global.texscriptconstantnamelist,-global.texscriptconstantlist)
topbar_texturescript_inbox=uiz_des_addtolist_list("texturescript in:","topbar_texturescript_in",-1,global.texscriptconstantlist,global.texscriptconstantnamelist,-global.texscriptconstantlist)
topbar_texturescript_outbox=uiz_des_addtolist_list("texturescript out:","topbar_texturescript_out",-1,global.texscriptconstantlist,global.texscriptconstantnamelist,-global.texscriptconstantlist)
topbar_sprite_normalbox=uiz_des_addtolist_sprite("sprite normal:","topbar_sprite_normal","spr_uiZ_border1")
topbar_color_normalbox=uiz_des_addtolist_color("color normal:","topbar_color_normal",c_gray)
topbar_margin_normalbox=uiz_des_addtolist_val("margin normal:","topbar_margin_normal",0)
topbar_sprite_texturemodebox=uiz_des_addtolist_list("margin normal:","topbar_sprite_texturemode",uiz_texturemode_fill,global.texconstantlist,global.texconstantnamelist)
topbar_border_texturemodebox=uiz_des_addtolist_list("texturemode border:","topbar_border_texturemode",-1,global.texconstantlist,global.texconstantnamelist)
topbar_sprite_overbox=uiz_des_addtolist_sprite("sprite over:","topbar_sprite_over","spr_uiZ_border1_over")
topbar_color_overbox=uiz_des_addtolist_color("color over:","topbar_color_over",-1)
topbar_margin_overbox=uiz_des_addtolist_val("margin over:","topbar_margin_over",-1)
topbar_sprite_inbox=uiz_des_addtolist_sprite("sprite in:","topbar_sprite_in","spr_uiZ_border1_in")
topbar_color_inbox=uiz_des_addtolist_color("color in:","topbar_color_in",-1)
topbar_margin_inbox=uiz_des_addtolist_val("margin in:","topbar_margin_in",-1)
topbar_sprite_outbox=uiz_des_addtolist_sprite("sprite out:","topbar_sprite_out","spr_uiZ_border1_in")
topbar_color_outbox=uiz_des_addtolist_color("color out:","topbar_color_out",-1)
topbar_margin_outbox=uiz_des_addtolist_val("margin out:","topbar_margin_out",-1)


uiz_des_object_alarm0end()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_des_object_beginstep()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.selobj=id then{
if isloading=0 and uiz_des_checkitems()=1 then{
ini_open(ini)
var o=object;
var u=updateobject;
var v=u.value
var apply=1
if u.rlorstr=1 then{wv=ini_read_string(string(o.uiobject),updatetype,"")}else{wv=ini_read_real(string(o.uiobject),updatetype,0)}
switch(updatetype){
case "name": if u.updated=1 then{wv=obj_uiz_des_name(o,v)}else{apply=0;} break;
case "parent": 
wv=ds_list_find_index(obj_uiz_designer.aflist,global.newparentlist[|u.select]);
if global.newparentlist[|u.select].object_index=obj_uiZ_frameset then{
//give choice
uiz_des_framewindow_parent(global.newparentlist[|u.select])
ini_open(ini)
}else{uiz_setParent(object,global.newparentlist[|u.select]) }  break;
case "x": o.posvalx=v; posvalx=v; wv=v; break;
case "y": o.posvaly=v; posvaly=v; wv=v; break;
case "posvalw": o.posvalw=v; posvalw=v; wv=v; break;
case "posvalh": o.posvalh=v; posvalh=v; wv=v; break;
case "posvalwtype": o.posvalwtype=u.select; posvalwtype=u.select; wv=u.select; break;
case "posvalhtype": o.posvalhtype=u.select; posvalhtype=u.select; wv=u.select; break;
case "posvalxtype": o.posinframex=real(u.value); posinframex=real(u.value); wv=u.select; break;
case "posvalytype": o.posinframey=real(u.value); posinframey=real(u.value); wv=u.select; break;
case "setpointx": o.setpointx=real(u.value); wv=real(u.value); wv=u.select; break;
case "setpointy": o.setpointy=real(u.value); wv=real(u.value); wv=u.select; break;
case "destroylists": o.destroylists=v; wv=v; break;
case "barsize": o.barsize=v; wv=v; break;
case "barsizetype": o.barsizetype=real(v); wv=real(v); break;
case "textmargin": o.textmargin=v; wv=v; break;
case "minbarsize": o.minbarsize=v; wv=v; break;
case "minbarsizetype": o.minbarsizetype=real(v); wv=real(v); break;
case "mousemargin": o.mousemargin=v; wv=v; break;
case "listheightmargin": o.listheightmargin=v; wv=v; break;
case "drawdivider": o.drawdivider=v; wv=v; break;
case "dividercolor": o.dividercolor=v; wv=v; break;
case "enabledivider": o.enabledivider=v; wv=v; break;
case "cellcolor": o.cellcolor=v; wv=v; break;
case "textcolor": o.textcolor=v; wv=v; break;
case "selectiononcolor": o.selectiononcolor=v; wv=v; break;
case "selectionincolor": o.selectionincolor=v; wv=v; break;
case "font": if v="none" then{o.font=-1;}else{o.font=asset_get_index(v);} wv=v; break;
case "selectionmode": o.selectionmode=v; wv=v; break;
case "texturescript": o.texturescript=real(v); wv=u.selected; break;
case "texturescript_over": o.texturescript_over=real(v); wv=u.selected; break;
case "texturescript_in": o.texturescript_in=real(v); wv=u.selected; break;
case "texturescript_out": o.texturescript_out=real(v); wv=u.selected; break;
case "sprite_normal": o.sprite_normal=asset_get_index(v); wv=v; break;
case "color_normal": o.color_normal=v; wv=v; break;
case "margin_normal": o.margin_normal=v; wv=v; break;
case "sprite_texturemode": o.sprite_texturemode=real(v); wv=u.selected; break;
case "border_texturemode": o.border_texturemode=real(v); wv=u.selected; break;
case "sprite_over": o.sprite_over=asset_get_index(v); wv=v; break;
case "color_over": o.color_over=v; wv=v; break;
case "margin_over": o.margin_over=v; wv=v; break;
case "sprite_in": o.sprite_in=asset_get_index(v); wv=v; break;
case "color_in": o.color_in=v; wv=v; break;
case "margin_in": o.margin_in=v; wv=v; break;
case "sprite_out": o.sprite_out=asset_get_index(v); wv=v; break;
case "color_out": o.color_out=v; wv=v; break;
case "margin_out": o.margin_out=v; wv=v; break;
case "topbar_texturescript": o.topbar_texturescript=real(v); wv=u.selected; break;
case "topbar_texturescript_over": o.topbar_texturescript_over=real(v); wv=u.selected; break;
case "topbar_texturescript_in": o.topbar_texturescript_in=real(v); wv=u.selected; break;
case "topbar_texturescript_out": o.topbar_texturescript_out=real(v); wv=u.selected; break;
case "topbar_sprite_normal": o.topbar_sprite_normal=asset_get_index(v); wv=v; break;
case "topbar_color_normal": o.topbar_color_normal=v; wv=v; break;
case "topbar_margin_normal": o.topbar_margin_normal=v; wv=v; break;
case "topbar_sprite_texturemode": o.topbar_sprite_texturemode=real(v); wv=u.selected; break;
case "topbar_border_texturemode": o.topbar_border_texturemode=real(v); wv=u.selected; break;
case "topbar_sprite_over": o.topbar_sprite_over=asset_get_index(v); wv=v; break;
case "topbar_color_over": o.topbar_color_over=v; wv=v; break;
case "topbar_margin_over": o.topbar_margin_over=v; wv=v; break;
case "topbar_sprite_in": o.topbar_sprite_in=asset_get_index(v); wv=v; break;
case "topbar_color_in": o.topbar_color_in=v; wv=v; break;
case "topbar_margin_in": o.topbar_margin_in=v; wv=v; break;
case "topbar_sprite_out": o.topbar_sprite_out=asset_get_index(v); wv=v; break;
case "topbar_color_out": o.topbar_color_out=v; wv=v; break;
case "topbar_margin_out": o.topbar_margin_out=v; wv=v; break;
}
uiz_fixgeneralpos(o)
uiz_fixgeneralpos(id)
uiz_fixchildren(o,1)
if apply=1 then{
if u.rlorstr=1 then{ini_write_string(string(o.uiobject),updatetype,wv)}else{ini_write_real(string(o.uiobject),updatetype,wv)}
}
ini_close()
}
if isloading&gt;0 then{isloading--;}else{isloading=0;}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_destroydslist(updatelist)
uiz_destroydslist(updaterlorstrlist)
uiz_destroydslist(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_destroydslist(updatelist)
uiz_destroydslist(updaterlorstrlist)
uiz_destroydslist(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_draw()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
