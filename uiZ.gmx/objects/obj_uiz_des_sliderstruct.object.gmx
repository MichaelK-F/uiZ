<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load data from ini
var wv,o;
ini_open(ini)
if (global.loadingobjects=0 and ds_exists(itemlist,ds_type_list)) or (global.loadingobjects=1 and ds_exists(updatelist,ds_type_list)) then{
if global.loadingobjects=0 then{var l=itemlist}else{var l=updatelist}
var sz=ds_list_size(l)
for(i=0;i&lt;sz;i++){
if global.loadingobjects=0 then{o=l[| i]}else{
o=uiz_des_object_loadingobjects_bussy(i);}
if instance_exists(o){
if o.rlorstr=1 then{wv=ini_read_string(string(object.uiobject),o.updatetype,o.defval)}else{
wv=ini_read_real(string(object.uiobject),o.updatetype,o.defval)}
uiz_des_setvalueof(o,wv)

switch(o.updatetype){
case "name": o.value=obj_uiz_des_name(object,wv) break;
case "parent": if wv&gt;-1 then{var setto=obj_uiz_designer.aflist[| wv];if setto.object_index=obj_uiZ_frameset then{uiz_des_framesetparent(wv) ini_open(ini)}else{uiz_setparent(object,setto)} }
case "x": object.posvalx=wv;object.x=wv;x=wv;posvalx=wv; break;
case "y": object.posvaly=wv;object.y=wv;y=wv;posvaly=wv; break;
case "posvalw": object.posvalw=wv;posvalw=wv; break;
case "posvalh": object.posvalh=wv;posvalh=wv; break;
case "posvalwtype": var k=global.fxconstantlist[|wv]; object.posvalwtype=k;posvalwtype=k;o.selected=wv; break;
case "posvalhtype": var k=global.fyconstantlist[|wv]; object.posvalhtype=k;posvalhtype=k;o.selected=wv; break;
case "posvalxtype": var k=global.xconstantlist[|wv]; object.posinframex=k;posinframex=k;o.selected=wv; break;
case "posvalytype": var k=global.yconstantlist[|wv]; object.posinframey=k;posinframey=k;o.selected=wv; break;
case "setpointx": var k=global.xcenterconstantlist[|wv]; object.setpointx=k; setpointx=k; o.selected=wv; break;
case "setpointy": var k=global.ycenterconstantlist[|wv]; object.setpointy=k; setpointy=k; o.selected=wv; break;case "frames": object.frames=wv;frames=wv; break;
case "animationtime": object.animationtime=wv;animationtime=wv; break;
case "animation": var k=global.animconstantlist[|wv]; if k=undefined then{k=o.defval} object.animation=k;animation=k; break;
case "horizontal": object.horizontal=wv;horizontal=wv; break;
case "mouseslide": object.mouseslide=wv;mouseslide=wv; break;
case "slideonwholeframe": object.slideonwholeframe=wv;slideonwholeframe=wv; break;
case "slidesize": object.slidesize=wv;slidesize=wv; break;
case "slidesizetype": object.slidesizetype=wv;slidesizetype=wv; break;
case "slidedist": object.slidedist=wv;slidedist=wv; break;
case "slidedisttype": object.slidedisttype=wv;slidedisttype=wv; break;
}
}
}
uiz_fixgeneralpos(object)

}

ini_close();
if overdestroy=1 then{instance_destroy()}
init=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
uiz_des_object_alarm0()

framesbox=uiz_des_addtolist_val("frames:","frames",0)
animationtimebox=uiz_des_addtolist_val("animation time:","animationtime",0.25)
animationbox=uiz_des_addtolist_list("animation:","animation",uiz_exponential_inout,global.animconstantlist,global.animconstantnamelist)
horizontalbox=uiz_des_addtolist_bool("horizontal(true) or vertical(false):","horizontal",true)
mouseslidebox=uiz_des_addtolist_bool("allow mouse sliding:","mouseslide",true)
slideonwholeframebox=uiz_des_addtolist_bool("slide on whole frame:","slideonwholeframe",false)
slidesizebox=uiz_des_addtolist_val("slidesize:","slidesize",0.3)
slidesizetypebox=uiz_des_addtolist_list("slidesize type:","slidesizetype",dp,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)
slidedistbox=uiz_des_addtolist_val("minimum slide distance:","slidedist",1)
slidedisttypebox=uiz_des_addtolist_list("minimum slide distance type:","slidedisttype",dp,global.xyconstantlist,global.xyconstantnamelist,global.xyconstantstringlist)


uiz_des_object_alarm0end()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_des_object_beginstep()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.selobj=id then{
if isloading=0 and uiz_des_checkitems()=1 then{
ini_open(ini)
var o=object;
var u=updateobject;
var v=u.value
var apply=1
if u.rlorstr=1 then{wv=ini_read_string(string(o.uiobject),updatetype,"")}else{wv=ini_read_real(string(o.uiobject),updatetype,0)}
switch(updatetype){
case "name": if u.updated=1 then{wv=obj_uiz_des_name(o,v)}else{apply=0;} break;
case "parent": 
wv=ds_list_find_index(obj_uiz_designer.aflist,global.newparentlist[|u.select]);
if global.newparentlist[|u.select].object_index=obj_uiZ_frameset then{
//give choice
uiz_des_framewindow_parent(global.newparentlist[|u.select])
ini_open(ini)
}else{uiz_setparent(object,global.newparentlist[|u.select]) }  break;
case "x": o.posvalx=v; posvalx=v; wv=v; break;
case "y": o.posvaly=v; posvaly=v; wv=v; break;
case "posvalw": o.posvalw=v; posvalw=v; wv=v; break;
case "posvalh": o.posvalh=v; posvalh=v; wv=v; break;
case "posvalwtype": o.posvalwtype=u.select; posvalwtype=u.select; wv=u.select; break;
case "posvalhtype": o.posvalhtype=u.select; posvalhtype=u.select; wv=u.select; break;
case "posvalxtype": o.posinframex=real(u.value); posinframex=real(u.value); wv=u.select; break;
case "posvalytype": o.posinframey=real(u.value); posinframey=real(u.value); wv=u.select; break;
case "setpointx": o.setpointx=real(u.value); wv=real(u.value); wv=u.select; break;
case "setpointy": o.setpointy=real(u.value); wv=real(u.value); wv=u.select; break;
case "frames": o.frames=v; wv=v; break;
case "animationtime": o.animationtime=v; wv=v; break;
case "animation": o.animation=real(v); wv=u.selected; break;
case "horizontal": o.horizontal=v; wv=v; break;
case "mouseslide": o.mouseslide=v; wv=v; break;
case "slideonwholeframe": o.slideonwholeframe=v; wv=v; break;
case "slidesize": o.slidesize=v; wv=v; break;
case "slidesizetype": o.slidesizetype=real(v); wv=real(v); break;
case "slidedist": o.slidedist=v; wv=v; break;
case "slidedisttype": o.slidedisttype=real(v); wv=real(v); break;
}
uiz_fixgeneralpos(o)
uiz_fixgeneralpos(id)
uiz_fixchildren(o,1)
if apply=1 then{
if u.rlorstr=1 then{ini_write_string(string(o.uiobject),updatetype,wv)}else{ini_write_real(string(o.uiobject),updatetype,wv)}
}
ini_close()
}
if isloading&gt;0 then{isloading--;}else{isloading=0;}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_destroydslist(updatelist)
uiz_destroydslist(updaterlorstrlist)
uiz_destroydslist(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_destroydslist(updatelist)
uiz_destroydslist(updaterlorstrlist)
uiz_destroydslist(updatedefvallist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_draw()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
