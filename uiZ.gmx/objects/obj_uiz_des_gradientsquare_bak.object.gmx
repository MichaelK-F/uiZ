<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_objinit()
uiz_setParent(id,obj_uiz_designer.tf)
alarm[0]=1
itemlist=ds_list_create()
overdestroy=0
snaptoresize=0
init=0

//dbm(uiz_designer.aflist,uiz_designer.afnamelist,uiz_designer.afsprlist,uiz_designer.afimglist)

//ds_list_add(obj_uiz_designer.aflist,id)
//ds_list_add(obj_uiz_designer.afnamelist,string(string(id)+": "+string(object_get_name(id))))
//var pos=ds_list_find_index(obj_uiz_designer.uizlist,string(object_get_name(id)))
//ds_list_add(obj_uiz_designer.afsprlist,obj_uiz_designer.uizsprlist[| pos])
//ds_list_add(obj_uiz_designer.afimglist,obj_uiz_designer.uizimglist[| pos])

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_destroyobject_notself(obj_uiz_designer.rightbar)
if ds_exists(itemlist,ds_type_list) then{ds_list_destroy(itemlist)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load data from ini
var wv,o;
ini_open(ini)
if ds_exists(itemlist,ds_type_list) then{
var sz=ds_list_size(itemlist)
for(i=0;i&lt;sz;i++){
o=itemlist[| i]
if o.rlorstr=1 then{wv=ini_read_string(string(object.uiobject),o.updatetype,o.defval)}else{
wv=ini_read_real(string(object.uiobject),o.updatetype,o.defval)}
o.value=wv
switch(o.updatetype){
case "x": object.x=wv;x=wv; break;
case "y": object.y=wv;y=wv; break;
case "posvalw": object.posvalw=wv;posvalw=wv; break;
case "posvalh": object.posvalh=wv;posvalh=wv; break;
case "posvalwtype": object.posvalwtype=wv;posvalwtype=wv;o.selected=wv; break;
case "posvalhtype": object.posvalhtype=wv;posvalhtype=wv;o.selected=wv; break;
case "color1": object.color1=wv;break;
case "color2": object.color2=wv;break;
case "color3": object.color3=wv;break;
case "color4": object.color4=wv;break;
case "text": object.text=wv; break;
case "istext": object.istext=wv; break;
}
}
uiz_fixgeneralpos(object)
}

ini_close();
if overdestroy=1 then{instance_destroy()}
init=1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
uiz_destroyobject_notself(obj_uiz_designer.rightbar)
var sz=ds_list_size(itemlist)
for(var i=0;i&lt;sz;i++){

}
global.selobj=id
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
ini=obj_uiz_designer.ini
//global.selobj=id//afobjlist[| gmtreelist.sel]

//frame=uiz_frameset_create()
//frame.width=0
//frame.height=0
//uiz_fixframepos(frame)
//dbm("hihi")
if ds_exists(itemlist,ds_type_list) then{ds_list_destroy(itemlist) itemlist=ds_list_create()}else{itemlist=ds_list_create()}
g=uiz_grid_create(2,1)
g.adddepth=20
uiz_setParent(g,obj_uiz_designer.rightbar)
//uiz_setParent(g,frame)
uiz_fixgridpos(g)
uiz_setgridframes(g)
uiz_gridsize_row(g,0,1,px)
gridh=0

xbox=uiz_des_addtolist_val("x:","x",0)
ybox=uiz_des_addtolist_val("y:","y",0)
widthbox=uiz_des_addtolist_pos("width:","posvalw",0,"posvalwtype",px)
heightbox=uiz_des_addtolist_pos("height:","posvalh",0,"posvalhtype",px)
color1box=uiz_des_addtolist_color("left top:","color1",$888888)
color2box=uiz_des_addtolist_color("right top:","color2",$888888)
color4box=uiz_des_addtolist_color("left bottom:","color4",$888888)
color3box=uiz_des_addtolist_color("right bottom:","color3",$888888)
istextbox=uiz_des_addtolist_bool("text:","istext",0)
textbox=uiz_des_addtolist_string("text:","text","penis")


uiz_setgridframes(g)
uiz_resizegridframes(g)
//if init=1 then{alarm[1]=1; init=0;}
alarm[1]=1;
global.selobj=id
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_mouse_docheck();

if uiz_cntn(){
thickness=5
stripes=10

var sw=width/(stripes*2-1)
var sh=height/(stripes*2-1)
var sa=(sw+sh)/2
var stripesw=round(width/sa)
var stripesh=round(height/sa)
sw=width/(stripesw-1)
sh=height/(stripesh-1)
//draw lines in width
for(var i=0;i&lt;stripesw;i+=2){
draw_line_width(rx+sw*i,ry,rx+sw*i+sw,ry,thickness)
draw_line_width(rx+sw*i,rly,rx+sw*i+sw,rly,thickness)
}
//draw lines in height
for(var i=0;i&lt;stripesh;i+=2){
draw_line_width(rx,ry+sh*i,rx,ry+sh*i+sh,thickness)
draw_line_width(rlx,ry+sh*i,rlx,ry+sh*i+sh,thickness)
}

//top left corner
draw_circle(rx,ry,thickness/2,0)
//top right corner
draw_circle(rlx,ry,thickness/2,0)
//bottom left corner
draw_circle(rx,rly,thickness/2,0)
//bottom right corner
draw_circle(rlx,rly,thickness/2,0)


uiz_containend()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.selobj=id then{
if uiz_des_checkitems() then{
ini_open(ini)
var o=object;
var u=updateobject;
var v=u.value
if u.rlorstr=1 then{wv=ini_read_string(string(o.uiobject),updatetype,"")}else{wv=ini_read_real(string(o.uiobject),updatetype,0)}
switch(updatetype){
case "x": o.x=v; x=v; wv=v; break;
case "y": o.y=v; y=v; wv=v; break;
case "posvalw": o.posvalw=v; posvalw=v; wv=v; break;
case "posvalh": o.posvalh=v; posvalh=v; wv=v; break;
case "posvalwtype": o.posvalwtype=u.select; posvalwtype=u.select; wv=u.select; break;
case "posvalhtype": o.posvalhtype=u.select; posvalhtype=u.select; wv=u.select; break;
case "color1": o.color1=v; wv=v; break;
case "color2": o.color2=v; wv=v; break;
case "color3": o.color3=v; wv=v; break;
case "color4": o.color4=v; wv=v; break;
case "istext": o.istext=v; wv=v; break;
case "text": o.text=v; wv=v; break;

}
uiz_fixgeneralpos(o)
uiz_fixgeneralpos(id)
if u.rlorstr=1 then{ini_write_string(string(o.uiobject),updatetype,wv)}else{ini_write_real(string(o.uiobject),updatetype,wv)}
ini_close()
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if uiz_cntn(){
if init=1 then{
thickness=5
stripes=10

var sw=width/(stripes*2-1)
var sh=height/(stripes*2-1)
var sa=(sw+sh)/2
var stripesw=round(width/sa)
var stripesh=round(height/sa)
sw=width/(stripesw-1)
sh=height/(stripesh-1)
//draw lines in width
if sw*stripesw+sw&gt;width then{stripesw-=1}
for(var i=0;i&lt;stripesw;i+=2){
draw_line_width(rx+sw*i,ry,rx+sw*i+sw,ry,thickness)
draw_line_width(rx+sw*i,rly,rx+sw*i+sw,rly,thickness)
}
//draw lines in height
if sh*stripesh+sh&gt;height then{stripesh-=1}
for(var i=0;i&lt;stripesh;i+=2){
draw_line_width(rx,ry+sh*i,rx,ry+sh*i+sh,thickness)
draw_line_width(rlx,ry+sh*i,rlx,ry+sh*i+sh,thickness)
}

//top left corner
draw_circle(rx,ry,thickness/2,0)
//top right corner
draw_circle(rlx,ry,thickness/2,0)
//bottom left corner
draw_circle(rx,rly,thickness/2,0)
//bottom right corner
draw_circle(rlx,rly,thickness/2,0)
var bsz=max(min((width+height)/2*display_get_dpi_x()/2000,display_get_dpi_x()*0.3),10)
var outsx=0;
var outsy=0;
if width&lt;bsz*2 then{outsx=bsz}
if height&lt;bsz*2 then{outsy=bsz}
//now draw the risize buttons
if uiz_draw_squarebutton_independent(rlx-bsz+outsx,rly-bsz+outsy,rlx+outsx,rly+outsy,c_white,c_gray,c_black,1)=1 and global.mousefrozen=0 then{snaptoresize=1; global.mousefrozen=1}else{if snaptoresize=1 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
if uiz_draw_squarebutton_independent(rx-outsx,ry-outsy,rx+bsz-outsx,ry+bsz-outsy,c_white,c_gray,c_black,1)=1 and global.mousefrozen=0 then{snaptoresize=2; global.mousefrozen=1}else{if snaptoresize=2 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
if uiz_draw_squarebutton_independent(rlx-bsz+outsx,ry-outsy,rlx+outsx,ry+bsz-outsy,c_white,c_gray,c_black,1)=1 and global.mousefrozen=0 then{snaptoresize=3; global.mousefrozen=1}else{if snaptoresize=3 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
if uiz_draw_squarebutton_independent(rx-outsx,rly-bsz+outsy,rx+bsz-outsx,rly+outsy,c_white,c_gray,c_black,1)=1 and global.mousefrozen=0 then{snaptoresize=4; global.mousefrozen=1}else{if snaptoresize=4 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
if uiz_draw_squarebutton_independent(rlx-bsz+outsx,ry+height/2-bsz/2,rlx+outsx,ry+height/2+bsz/2,c_white,c_gray,c_black,1)=1 and global.mousefrozen=0 then{snaptoresize=5; global.mousefrozen=1}else{if snaptoresize=5 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
if uiz_draw_squarebutton_independent(rx-outsx,ry+height/2-bsz/2,rx+bsz-outsx,ry+height/2+bsz/2,c_white,c_gray,c_black,1)=1 and global.mousefrozen=0 then{snaptoresize=6; global.mousefrozen=1}else{if snaptoresize=6 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
if uiz_draw_squarebutton_independent(rx+width/2-bsz/2,ry-outsy,rx+width/2+bsz/2,ry+bsz-outsy,c_white,c_gray,c_black,1)=1 and global.mousefrozen=0 then{snaptoresize=7; global.mousefrozen=1}else{if snaptoresize=7 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
if uiz_draw_squarebutton_independent(rx+width/2-bsz/2,rly-bsz+outsy,rx+width/2+bsz/2,rly+outsy,c_white,c_gray,c_black,1)=1 and global.mousefrozen=0 then{snaptoresize=8; global.mousefrozen=1}else{if snaptoresize=8 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
if mouse_check_button(mb_left) and point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),rx,ry,rlx,rly) and !point_in_rectangle(uiz_getmouse_x(),uiz_getmouse_y(),rx+thickness,ry+thickness,rlx-thickness,rly-thickness) and global.mousefrozen=0 then{snaptoresize=9; global.mousefrozen=1}else{if snaptoresize=9 and !mouse_check_button(mb_left) then{snaptoresize=0; global.mousefrozen=0}}
switch(snaptoresize){
case 1: uiz_des_update_wh() break;
case 2: uiz_des_update_whxy() break;
case 3: uiz_des_update_why() break;
case 4: uiz_des_update_whx() break;
case 5: uiz_des_update_w() break;
case 6: uiz_des_update_wx() break;
case 7: uiz_des_update_hy() break;
case 8: uiz_des_update_h() break;
case 9: uiz_des_update_xy() break;
}
//check for general movement


}
uiz_containend()}else{if snaptoresize&gt;0 then{snaptoresize=0;global.mousefrozen=0}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
