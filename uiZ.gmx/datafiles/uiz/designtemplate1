<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiz_des_object_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load data from ini
var wv,o;
ini_open(ini)
if (global.loadingobjects=0 and ds_exists(itemlist,ds_type_list)) or (global.loadingobjects=1 and ds_exists(updatelist,ds_type_list)) then{
if global.loadingobjects=0 then{var l=itemlist}else{var l=updatelist}
var sz=ds_list_size(l)
for(i=0;i&lt;sz;i++){
if global.loadingobjects=0 then{o=l[| i]}else{
o=uiz_des_object_loadingobjects_bussy(i);}
if instance_exists(o){
if o.rlorstr=1 then{wv=ini_read_string(string(object.uiobject),o.updatetype,o.defval)}else{
wv=ini_read_real(string(object.uiobject),o.updatetype,o.defval)}
uiz_des_setvalueof(o,wv)

switch(o.updatetype){
case "name": o.value=obj_uiz_des_name(object,wv) break;
case "parent": if wv&gt;-1 then{var setto=obj_uiz_designer.aflist[| wv];if setto.object_index=obj_uiZ_frameset then{uiz_des_framesetparent(wv) ini_open(ini)}else{uiz_setParent(object,setto)} }
case "x": object.posvalx=wv;object.x=wv;x=wv;posvalx=wv; break;
case "y": object.posvaly=wv;object.y=wv;y=wv;posvaly=wv; break;
case "posvalw": object.posvalw=wv;posvalw=wv; break;
case "posvalh": object.posvalh=wv;posvalh=wv; break;
case "posvalwtype": object.posvalwtype=wv;posvalwtype=wv;o.selected=wv; break;
case "posvalhtype": object.posvalhtype=wv;posvalhtype=wv;o.selected=wv; break;
case "posvalxtype": object.posinframex=wv;posinframex=wv;o.selected=wv; break;
case "posvalytype": object.posinframey=wv;posinframey=wv;o.selected=wv; break;
case "setpointx": object.setpointx=wv; setpointx=wv; o.selected=wv; break;
case "setpointy": object.setpointy=wv; setpointy=wv; o.selected=wv; break;